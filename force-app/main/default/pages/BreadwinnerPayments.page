<apex:page sidebar="false" lightningStylesheets="true" controller="BreadwinnerController" tabStyle="BreadwinnerPayments__tab" action="{!initializeApp}">  
    <apex:form id="form" style="height: 100%">
        <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="height: 100%">
            <head>
                <meta charset="utf-8" />
                <apex:variable value="{!OR($User.UIThemeDisplayed == 'Theme4d', $User.UIThemeDisplayed == 'Theme4t')}" var="isLightning" />
                <apex:slds />
                <script src="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/js/jquery-3.3.1.min.js')}"></script>
                <!-- Version 49 of the google chart loader taken from https://www.gstatic.com/charts/loader.js -->
                <script src="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/js/gcharts-49.js')}"></script>
                <script type="text/javascript">
                    j$ = jQuery.noConflict();
                    var stripe;
                    var elements;
                    var card;
                    var overflowtxt='';
                    j$(document).ready(function() {
                        j$('title')[0].innerText = 'Breadwinner Payments | Setup';
                        j$('#datePicker').hide();
                        HideStyleSheet();
                        message();

                        onTabEnterPushToInteractionLog('Setup');
                        j$('.removeMeForSBDev').remove();// removing the subscribe path item for Develper/sandbox orgs to avoid css conflicts

                        // Creating Metadata Remote Site
                        createRemoteSiteMetadata('', '');

                        if(document.getElementById('accountSync') != null){
                            document.getElementById('accountSync').checked = true;
                            selectSyncObject('Account');
                        }
                    });
                    j$("body").click(function(event){
                        if (event.target.id != "dropdown"){
                        {
                            if(overflowtxt=='')
                            {
                                j$("li.slds-is-open").removeClass("Highlight");
                            }
                            j$("li.slds-is-open").removeClass("slds-is-open");
                    }}});
                    j$(document).keyup (
                        function(event){
                            var code = event.keyCode || event.which;
                            if (code == 27) {
                                if(j$('#messageModal').hasClass('slds-fade-in-open')){
                                    rerenderEntirePage();
                                }
                                if(j$('#chooseProcessorModal').hasClass('slds-fade-in-open')){
                                    resetBraintreeAPIKeys();
                                }
                                j$('.slds-modal.slds-fade-in-open').removeClass('slds-fade-in-open');
                                j$('.slds-backdrop.slds-backdrop--open').removeClass('slds-backdrop--open');
                                j$("body.sfdcBody").css({"overflow" : ""});                                
                            }
                        }
                    );
                    function selectTab(elmnt) {
                        j$("#Breadwinner-Left-Menu ul").children(".slds-is-active").removeClass("slds-is-active");
                        j$(elmnt).parent("li").addClass("slds-is-active");

                        j$("#breadwinner-right-content div.slds-show").addClass("slds-hide");
                        j$("#breadwinner-right-content div.slds-show").removeClass("slds-show");
                        if(elmnt.id == "Permissions"){
                            permissionSetSelectTab(j$("#breadwinner-right-content").children("div[aria-labelledby='"+elmnt.id+"']").children("div").children("ul").children("li").children("a[aria-controls='overview']"));
                            queryPSAssignedUsers('Overview','Name','ASC');
                        }
                        if(elmnt.id == "troubleshoot"){
                            TroubleshootselectTab(j$("#breadwinner-right-content").children("div[aria-labelledby='"+elmnt.id+"']").children("div").children("ul").children("li").children("a[aria-controls='tab-default-1']"));
                        }
                        if(elmnt.id == "customersConfiguration"){
                            var element = document.getElementById('{!JSENCODE(appC.accountId)}__item');
                            TroubleshootselectTab(element,'{!JSENCODE(appC.accountId)}',null);
                        }
                        if(elmnt.id == "Connection-Troubleshoot" && {!JSENCODE(IF(isProcessorConnected,"true", "false"))}){
                            var element = document.getElementById('{!JSENCODE(appC.accountId)}__processor');
                            TroubleshootselectTab(element,'{!JSENCODE(appC.accountId)}',null);
                        }
                        j$("#breadwinner-right-content").children("div[aria-labelledby='" + elmnt.id + "']").addClass("slds-show").removeClass("slds-hide");
                        j$("#tab-default-1").removeClass("slds-hide").addClass("slds-show");
                    }
                    /* This method used to create remote site setting with the Host */
                    function createRemoteSiteMetadata(remoteSiteName, remoteSiteURL){
                        try{
                            console.log('remote site method');
                            var binding = new XMLHttpRequest();
                            var host = "{!LEFT($Api.Enterprise_Server_URL_330, FIND('/services',$Api.Enterprise_Server_URL_330))}";
                            console.log('{!$Api.Enterprise_Server_URL_330}');
                            if(remoteSiteName == '' && remoteSiteURL== ''){
                                var request =
                                    '<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="http://soap.sforce.com/2006/04/metadata"><sessionId>{!$Api.Session_ID}</sessionId></SessionHeader></env:Header><env:Body><upsertMetadata xmlns="http://soap.sforce.com/2006/04/metadata"><metadata xsi:type="RemoteSiteSetting"><fullName>Breadwinner_Payments_MyServer</fullName><description>Required to use Metadata API, created by Breadwinner</description><disableProtocolSecurity>false</disableProtocolSecurity><isActive>true</isActive><url>'+host+'</url></metadata></upsertMetadata></env:Body></env:Envelope>';
                            }
                            else{
                                var request =
                                    '<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="http://soap.sforce.com/2006/04/metadata"><sessionId>{!$Api.Session_ID}</sessionId></SessionHeader></env:Header><env:Body><upsertMetadata xmlns="http://soap.sforce.com/2006/04/metadata"><metadata xsi:type="RemoteSiteSetting"><fullName>'+remoteSiteName+'</fullName><description>Required to connect to Payment Processor, created by Breadwinner</description><disableProtocolSecurity>false</disableProtocolSecurity><isActive>true</isActive><url>'+remoteSiteURL+'</url></metadata></upsertMetadata></env:Body></env:Envelope>';
                            }
                            binding.open('POST', host+'services/Soap/m/33.0');
                            binding.setRequestHeader('SOAPAction','""');
                            binding.setRequestHeader('Content-Type', 'text/xml');
                            binding.onreadystatechange =
                            function() {
                                if(this.readyState==4) {
                                    var parser = new DOMParser();
                                    var doc  = parser.parseFromString(this.response, 'application/xml');
                                    var errors = doc.getElementsByTagName('errors');
                                    console.log('remote site setting errors::::'+errors);
                                    /* Error handling */
                                    if(this.status == 500){
                                        var resp = doc.getElementsByTagName("faultstring")[0].childNodes[0].nodeValue;
                                        console.log('failed to create remote sites---'+resp);
                                        var setToTrue = true;
                                        document.getElementById('j_id0:form:unableToAddRemoteSiteSetting').value = setToTrue;
                                    }
                                }
                            }
                            console.log({!JSENCODE(IF(isAdministrator,'true','false'))});
                            //if({!JSENCODE(IF(isAdministrator,'true','false'))}==true) binding.send(request);
                            binding.send(request);
                        }
                        catch(error){
                            console.log('exceptins::::'+error);
                        }
                    }
                    function reRenderArrowUpSVG(columnId){
                        var imageURL = '';
                        var SVG;
                        var SVGUse;
                        imageURL = '{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}';
                        SVG = j$('<svg/>', {
                            class: 'slds-button__icon',
                        });

                        SVGUse = j$('<use/>');
                        SVGUse.attr('xlink:href',imageURL);
                        j$(columnId).append(SVG.append(SVGUse));
                        j$(columnId).html(j$(columnId).html());
                    }

                    function reRenderArrowDownSVG(columnId){
                        var imageURL = '';
                        var SVG;
                        var SVGUse;
                        imageURL = '{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}';
                        SVG = j$('<svg/>', {
                            class: 'slds-button__icon',
                        });

                        SVGUse = j$('<use/>');
                        SVGUse.attr('xlink:href',imageURL);
                        j$(columnId).append(SVG.append(SVGUse));
                        j$(columnId).html(j$(columnId).html());
                    }
                    function permissionSetSelectTab(elmnt){
                        // slds-is-active
                        j$(elmnt).parent("li").siblings(".slds-is-active").removeClass("slds-is-active");
                        j$(elmnt).parent("li").addClass("slds-is-active");

                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);

                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);
                    }
                    function OpenContactSupportTab() {
                        var SupportTabId = "ContactSupport";
                        selectTab(document.getElementById(SupportTabId));
                        loadIframesfun('ContactSupportIframeDiv','https://help-payments.breadwinner.com/support/tickets/new?embed=true');
                    }

                    function showModal(modalId,backdropId,contentId,content){
                        if (contentId) {
                            j$('#'+ contentId).html(content);
                        }
                        j$('#'+ modalId).addClass('slds-fade-in-open');
                        j$('#'+ backdropId).addClass('slds-backdrop--open');
                        j$("body.sfdcBody").css({"overflow" : "hidden"});
                    }

                    function closeModal(modalId,backdropId){
                        j$('#'+ modalId).removeClass('slds-fade-in-open');
                        j$('#'+ backdropId).removeClass('slds-backdrop--open');
                        j$("body.sfdcBody").css({"overflow" : ""});
                    }
                    function selectSyncObject(obj) {
                        console.log('select sync------'+obj);
                        j$("[id$=selectedMatchtype]").val(obj);
                         refreshSycPannel();
                    }

                    function showHideNestedMenu(elmnt){
                        j$("#"+elmnt.id).children("ul").toggle();
                        j$("#"+elmnt.id).toggleClass("slds-section slds-is-open");
                    }

                    function HideStyleSheet() {
                        j$("link.user[href$='elements.css']").each(function() {
                            j$(this).removeAttr("href");
                        });
                    }
                    function connectWithProcessor(id) {
                        console.log('show div section');
                        var e = document.getElementById(id);
                        if(e.style.display== 'none')
                            e.style.display= 'block';
                        else
                            e.style.display= 'none';
                    }
                    function showmsgPannel() {
                        closeModal('chooseProcessorModal', 'backdrop');
                        showModal('messageModal', 'messageBackdrop', 'deleteMessage', '');
                    }
                    function message() {
                        j$(".infoM6, .infoM4, .infoM3, .infoM2, .infoS1").addClass("slds-notify slds-notify_alert slds-theme_inverse-text  slds-text-align_left slds-text-heading_small slds-m-bottom_small").css( {"font-weight":"500","line-height":"1.4","word-spacing":"1px","justify-content":"left", "background":"rgba(84,105,141,.95)"} );
                        j$(".errorM6, .errorM4, .errorM3, .errorM2, .errorS1").addClass("slds-notify slds-notify_alert slds-theme_error  slds-text-align_left slds-text-heading_small slds-m-bottom_small").css({"font-weight":"500","line-height":"1.4","word-spacing":"1px","justify-content":"left"});
                        j$(".warningM6, .warningM4, .warningM3, .warningM2, .warningS1").addClass("slds-notify slds-notify_alert slds-theme_warning  slds-text-align_left slds-text-heading_small slds-m-bottom_small").css( {"font-weight":"500","line-height":"1.4","word-spacing":"1px","justify-content":"left"}) ;
                        j$(".confirmM6, .confirmM4, .confirmM3, .confirmM2, .confirmS1").addClass("slds-notify slds-notify_alert slds-theme_success slds-text-align_left slds-text-heading_small slds-m-bottom_small").css( {"font-weight":"500","line-height":"1.4","word-spacing":"1px","justify-content":"left","font-size":"1rem !important","border-radius":"4px"} ) ;

                        j$("div .messageText h4").css( "color", "white" );
                        j$("div[class*='warning'] div.messageText h4").css( "color", "black" );
                        j$("table.messageTable td").css({"color" : "white"});
                        j$("div[class*='warning'] table.messageTable td").css( "color", "black" );
                    }

                    function reRendercheckmarkSVGIcons(){
                        var imageURL = '';
                        var SVG ;
                        var SVGUse ;
                        imageURL = '{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#check')}';
                        SVG = j$('<svg/>', {
                            class: 'slds-icon slds-icon_x-small',
                        });

                        SVGUse = j$('<use/>');
                        SVGUse.attr('xlink:href',imageURL);
                        j$(".slds-path__stage").prepend(SVG.append(SVGUse));
                        j$(".slds-path__stage").html(j$(".slds-path__stage").html());

                    }
                    // To load iframe onclick to reduce
                    function loadIframesfun(iframeSectionId,iframeURL){

                        // to clear div before we insert iframe
                        j$("#"+iframeSectionId).empty();
                        var iframeId = iframeSectionId + "Id";
                        console.log('iframeid----'+iframeId);
                        // to create iframe element
                        if(iframeURL.length>0){
                            var para = document.createElement("iframe");
                            para.setAttribute("src", iframeURL);
                            para.setAttribute("id", iframeId);
                            para.setAttribute("height","800px");
                            para.setAttribute("width","100%");

                            // injecting iframe to refereced div
                            document.getElementById(iframeSectionId).appendChild(para);
                        }
                    }
                    window.onmessage = (e) => {
                        if (e.data.hasOwnProperty("iframeId")) {
                            console.log('parent:::'+e.data.iframeId);
                            j$("#"+e.data.iframeId).css("height",e.data.iframeHeight);//+50+'px');
                            console.log('height'+document.getElementById(e.data.iframeId).style.height);
                        }
                    };
                    var loaded=false;
                    function NavigateToBreadwinnerPaymentsTab() {
                        var actualURL = window.location.href;
                        var url = '';
                        if ({!JSENCODE(sfMode) == 'classic'}) {
                            url = '' + actualURL.split("/apex/").reverse().pop() + '/apex/{!JSENCODE(breadwinnerPageName)}';
                        }
                        if ({!JSENCODE(sfMode) == 'lightning'}) {
                            url = '' + actualURL.split("/apex/").reverse().pop() + '/lightning/n/{!JSENCODE(breadwinnerPageName)}';
                        }
                        if(url != null) window.open(url, "_parent");

                    }
                    function onTabEnterPushToInteractionLog(tabName) {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BreadwinnerController.pushInteractionLogOnTabEnter}',
                                                                  tabName,
                                                                  function(result, event){
                                                                      if (event.status)
                                                                      {
                                                                      }
                                                                      else if (event.type === 'exception')
                                                                      {
                                                                      }
                                                                          else
                                                                          {
                                                                          }
                                                                  },
                                                                  {escape: true}
                                                                 );
                    }
                    function resetBraintreeAPIKeys(){
                        j$("[id$=publicKey]").val('');
                        j$("[id$=privateKey]").val('');
                        j$("[id$=selectedprocessorType]").val('none');
                        j$("[id$=braintreeAuthErrors]").val('');
                    }
                    function TroubleshootselectTab(elmnt,orgidValue,text) {
                        console.log('troublesot');
                        console.log('elemt---'+elmnt);
                        console.log('orgidValue---'+orgidValue);
                        if(text=='overflow')
                        {
                            j$(elmnt).parents("div.slds-dropdown").parent("li").siblings(".slds-active").removeClass("slds-active");
                            j$(elmnt).parents("div.slds-dropdown").find("li").addClass("slds-active");
                            overflowtxt=text;
                        }
                        else
                        {
                            j$(elmnt).parent("li").siblings(".slds-active").removeClass("slds-active");
                            j$(elmnt).parent("li").addClass("slds-active");
                            j$("#dropdown").find("li").removeClass("overflowactive");
                            j$("#dropdown").removeClass("Highlight");
                            j$(".slds-dropdown__item").removeClass("overflowactive");
                            overflowtxt='';
                        }
                        ///alert($(elmnt).parent("li.slds-dropdown__item").length);
                        j$(elmnt).parent("li.slds-dropdown__item").siblings("li.overflowactive").removeClass("overflowactive");
                        j$(elmnt).parent("li.slds-dropdown__item").addClass("overflowactive");
                        // tabindex
                        j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                        j$(elmnt).attr("tabindex", 0);

                        // aria-selected
                        j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                        j$(elmnt).attr("aria-selected", true);
                        var appConfigListSize = {!(appConfigList.size)};
                        // hiding previouly selected tab (slds-show/slds-hide)
                        if(appConfigListSize>0){
                            console.log('multi org');
                            j$(elmnt).closest(".slds-tabs_default").children("div[role='tabpanel'].slds-show").addClass("slds-hide");
                            j$(elmnt).closest(".slds-tabs_default").children("div[role='tabpanel'].slds-show").removeClass("slds-show");
                        }
                        // displaying newly selected tab (slds-show/slds-hide)
                        console.log('elmnt.id-----'+elmnt.id);
                        j$(elmnt).closest(".slds-tabs_default").children("div[aria-labelledby='"+elmnt.id+"']").addClass("slds-show");
                        j$(elmnt).closest(".slds-tabs_default").children("div[aria-labelledby='"+elmnt.id+"']").removeClass("slds-hide");
                        if(elmnt != null){
                            var elmntid = elmnt.id;
                            if(elmntid.includes('__processor'))
                                changeValue(orgidValue);
                            else
                                changeAccountValue(orgidValue);
                        }
                        
                    }
                    function selectTaboverflow(elmnt){
                        j$(elmnt).addClass("slds-dropdown-trigger slds-is-open Highlight");
                    }
                    
                    function reRenderHeaderSVG(id){
                        var iconName;
                        var imageURL;
                        if(id == 'setupIcon'){
                            imageURL = '{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom3')}';
                        }
                        if(id == 'dropdown'){
                            imageURL = '{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#down')}';
                        }
                        var SVG = j$('<svg/>', {
                            class: 'slds-icon slds-icon-custom-custom3',
                        });
                        var SVGUse = j$('<use/>');
                        SVGUse.attr('xlink:href',imageURL);
                        j$('#'+id).prepend(SVG.append(SVGUse));
                        j$('#'+id ).html(j$('#'+id).html());
                    }
               
                    function showhideImage(id){
                        var host = "{!LEFT($Api.Enterprise_Server_URL_330, FIND('/services',$Api.Enterprise_Server_URL_330))}";
                        var right = '{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/Chevronright_Black.png')}';
                        var down = '{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/Chevrondown_Black.png')}';
                        var rightImage = host+right.slice(1);
                        var downImage = host+down.slice(1);
                        var imgElement = document.getElementById(id);
                        imgElement.src = (imgElement.src == rightImage)? downImage : rightImage;
                    }
                </script>
                <style>                    
                    .slds-scope .slds-table_bordered {
                    border-top: 0px solid #d8dde6 !important;
                    }
                    .message {
                    background-color: inherit;
                    border-style: none;
                    padding: initial;
                    }
                    body .message {
                    font-size: initial !important;
                    margin-bottom: 0.25rem !important;
                    margin-top: 0.25rem !important;
                    }
                    .overflowactive
                    {
                    border-bottom: 2px solid #0070D2;
                    } 
                    .slds-scope .slds-tabs_default__link:focus
                    {
                    border-bottom-width: 0px;
                    border-color: grey ;
                    color:#54698d;
                    }
                    .Highlight
                    {
                    background-color:gainsboro;
                    }
                    table.messageTable td {
                    border-top: 1px !important;
                    }
                    .slds-text-heading_medium {
                    padding: 5px;
                    }
                    .msgIcon {
                    display: none !important;
                    background-image: inherit !important;
                    }
                    
                    .message .messageText {
                    margin: 0px;
                    }
                    
                    .message .messageText h4 {
                    font-weight: inherit;
                    display: initial;
                    }
                    
                    .slds-scope .slds-table .messageTable td {
                    padding: 1px;
                    }
                    
                    iframe {
                    border: 0px;
                    }
                    
                    .slds-scope a {
                    text-decoration: underline;
                    color: gray;
                    }
                    
                    .slds-scope .slds-table td {
                    white-space: normal;
                    }
                    
                    .slds-table td img {
                    max-width: initial;
                    height: initial;
                    }
                    
                    .slds-scope .slds-spinner_container {
                    position: fixed;
                    z-index: 9999;
                    }
                    
                    table.google-visualization-table-table td:nth-child(4) {
                    word-break: break-word;
                    }
                    
                    table.google-visualization-table-table td:nth-child(5) {
                    white-space: nowrap;
                    }
                    
                    .slds-is-active .slds-nav-vertical__action {
                    background-color: #f0f8fc;
                    border-color: #d8dde6;
                    border-left-color: #005fb2;
                    }
                    
                    .mt {
                    border-top: 1px solid #d8dde6 !important;
                    }
                    
                    .slds-text-body_small {
                    font-size: .75rem;
                    color: #54698d;
                    }
                    
                    .bread_create {
                    display: flex;
                    }
                    
                    .bread_create .check_in {
                    margin-left: 20px;
                    }
                    
                    .fonction_key {
                    margin-left: 10px !important;
                    }
                    
                    .breadwinner-right-content {
                    margin-bottom: 20px !important;
                    }
                    
                    .form_key label {
                    margin-bottom: 0px !important;
                    }
                    
                    .generalTab-header{
                        text-align: right;
                    }
                    .generalTab-value{
                        text-align: left;
                    }
                    
                    input {
                    padding: 7px 10px !important;
                    }
                    
                    .slds-button {
                    line-height: initial !important;
                    }
                    .slds-scope .slds-input {
                        line-height: 0;
                    }
                    
                    /* Arrow Path styles start */
                    .slds-scope .slds-path__nav .slds-is-complete, .slds-scope .slds-path__nav .slds-is-complete:before, .slds-scope .slds-path__nav .slds-is-complete:after {
                    background: rgb(75, 202, 129);
                    }
                    .slds-scope .slds-path__nav .slds-is-active, .slds-scope .slds-path__nav .slds-is-active:before, .slds-scope .slds-path__nav .slds-is-active:after {
                    background: rgb(0, 95, 178);
                    }
                    .slds-scope .slds-path__nav .slds-is-incomplete, .slds-scope .slds-path__nav .slds-is-incomplete:before, .slds-scope .slds-path__nav .slds-is-incomplete:after {
                    background: rgb(236, 235, 234);
                    }
                    .slds-scope .slds-path__nav .slds-is-complete:hover, .slds-scope .slds-path__nav .slds-is-complete:hover:before, .slds-scope .slds-path__nav .slds-is-complete:hover:after{
                    background: rgb(4, 132, 75);
                    }
                    .slds-scope .slds-path__nav .slds-is-active:hover, .slds-scope .slds-path__nav .slds-is-active:hover:before, .slds-scope .slds-path__nav .slds-is-active:hover:after{
                    background: rgb(0, 57, 107);
                    }
                    .slds-scope .slds-path__nav .slds-is-incomplete:hover, .slds-scope .slds-path__nav .slds-is-incomplete:hover:before, .slds-scope .slds-path__nav .slds-is-incomplete:hover:after {
                    background: rgb(221, 219, 218);
                    }
                    /* Arrow Path styles end */
                    
                    
                    .slds-scope .slds-path__item:first-child {
                    margin-left: 1% !important;}
                    
                    .slds-scope .slds-path__item:last-child {
                    margin-right: 1% !important;
                    }
                    
                    #card-element{
                    width: 35%;
                    }
                    #card-errors{
                    color:#fa755a !important;
                    }
                    .InputContainer .InputElement {
                    position: initial !important;
                    }
                    .slds-scope .slds-page-header{
                    border:0px;
                    border-bottom: 1px solid #d8dde6;
                    background: #f7f9fb;
                    }
                    .slds-scope .slds-page-header__title{
                    font-weight: normal;
                    }
                    .noSidebarCell, .sidebarCell .fixed{
                    padding: 0px !important;
                    }
                    .slds-scope {
                    overflow-x: hidden !important;
                    overflow-y: auto;
                    }
                    .slds-scope .slds-section-title_divider{
                    background: #f4f6f9;
                    border-radius: 4px;
                    }
                    .slds-scope a:hover, .slds-scope a:focus{
                    color: grey;
                    }
                    .slds-scope .slds-m-top_x-small{
                    margin-top: 0px;
                    }
                    .slds-scope .slds-wrap{
                        align-items: initial;
                    }
                    .nohover:hover {
                        box-shadow: initial !important
                    }
                    .slds-scope .slds-tabs_default__link, .sortlink {
                        text-decoration: none !important;
                        color: rgb(81, 79, 77) !important;
                    }
                    .sortlink:hover {
                        color: rgb(0, 95, 178) !important;
                    }
                    .slds-scope .slds-table_bordered {
                        border-top: 0px solid #d8dde6;
                    }
                    .topborder th {
                        padding : 0.5rem !important;
                        border-top: 1px solid #d8dde6 !important;
                    }
                    .topborder td{
                        padding : 0.5rem !important;
                    }
                    .iconDiv {
                        text-align: right;
                    }

                    /* Checkbox toggle - Read only/Active modes styles Start */
                    .bwMode .slds-checkbox_toggle .slds-checkbox_faux {
                        width: 7.5rem; font-weight: bold; white-space: nowrap;
                        background-color: rgb(75, 202, 129) !important; border-color: rgb(75, 202, 129) !important;
                    }
                    .bwMode .slds-checkbox_toggle .slds-checkbox_faux:focus, .bwMode .slds-checkbox_toggle .slds-checkbox_faux:hover{
                        background-color: rgb(4, 132, 75) !important;
                    }
                    .bwMode .slds-checkbox_toggle .slds-checkbox_faux:before {
                        position: absolute; top: 0.25rem; right: 0.6rem;
                        content: 'Read Only Mode'; color: white;
                    }
                    .bwMode .slds-checkbox_toggle [type=checkbox]:checked+.slds-checkbox_faux_container .slds-checkbox_faux{
                        background-color: rgba(27, 82, 151, 1.0) !important; border-color: rgba(27, 82, 151, 1.0) !important;
                    }
                    .bwMode .slds-checkbox_toggle [type=checkbox]:checked+.slds-checkbox_faux_container .slds-checkbox_faux:hover{
                        background-color: rgba(0, 68, 135, 1.0) !important;
                    }
                    .bwMode .slds-checkbox_toggle [type=checkbox]:checked+.slds-checkbox_faux_container .slds-checkbox_faux:after {
                        position: absolute; top: 0.25rem; left: .6rem;
                        transform: rotate(0deg); border-bottom: 0px; border-right: 0px;
                        content: 'Active Mode'; color: white;
                    }
                    /* Checkbox toggle - Read only/Active modes styles End */
                </style>
            </head>
            <body style="height: 100%; {!IF(OR($User.UIThemeDisplayed == 'Theme4d',$User.UIThemeDisplayed == 'Theme4t'),'overflow: hidden','')};">
                <div class="slds-scope slds-p-vertical_x-small" style="height: 100%">
                    <apex:actionStatus id="assign-action-status" layout="block">
                        <apex:facet name="start">
                            <div class="slds-spinner_container">
                                <div class="slds-spinner_brand slds-spinner slds-spinner_medium" role="alert">
                                    <span class="slds-assistive-text">Loading</span>
                                    <div class="slds-spinner__dot-a"></div>
                                    <div class="slds-spinner__dot-b"></div>
                                </div>
                            </div>
                        </apex:facet>
                    </apex:actionStatus>
                    <apex:inputHidden id="selectedMatchtype" value="{!customerMatchType}" />
                    <apex:inputHidden id="braintreeAuthErrors" value="{!braintreeAuthErrors}" /> 
                    <apex:inputHidden id="unableToAddRemoteSiteSetting" value="{!unableToAddRemoteSiteSetting}" />
                    <apex:inputHidden id="customerSyncConfigValue" value="{!customerSyncConfigValue}" />
                    <apex:actionFunction id="initializeApp" name="initializeApp" action="{!initializeApp}" reRender="setupRightContent" status="assign-action-status" oncomplete="reRendercheckmarkSVGIcons();HideStyleSheet();message();"/>
                   <apex:actionFunction name="refreshAppConfig" id="refreshAppConfig" status="assign-action-status" action="{!refreshAppConfig}" reRender="customersConfigSection, pgMsg"/>
                   <apex:actionFunction name="reRenderTroubleshootVariables" id="TroubleshootGeneralInitialize" status="assign-action-status" action="{!TroubleshootGeneralInitialize}" reRender="GeneralTroubleshootSection"/>

                    
                    <apex:actionFunction name="queryPSAssignedUsers" action="{!queryPermissionSetAssignedUsers}" status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.nameColumnUp');reRenderArrowDownSVG('.nameColumnDown');reRenderArrowUpSVG('.nameColumnUp1');reRenderArrowDownSVG('.nameColumnDown1');reRenderArrowUpSVG('.unameColumnUp');reRenderArrowDownSVG('.unameColumnDown');reRenderArrowUpSVG('.profileColumnUp');reRenderArrowDownSVG('.profileColumnDown');HideStyleSheet();message();">
                        <apex:param name="selectedPermissionSetParam" value="" assignTo="{!selectedPermissionSet}"/>
                        <apex:param name="column" value="Name" assignTo="{!sortExpression}"/>
                        <apex:param name="dir" value="ASC" assignTo="{!sortDirection}"/>
                        <apex:param name="column" value="Name" assignTo="{!modifyAllDataSortExpression}"/>
                        <apex:param name="dir" value="ASC" assignTo="{!modifyAllDataSortDirection}"/>
                    </apex:actionFunction>
                    <apex:outputPanel id="authorizationContent" rendered="{!!showBWSetupContent}">
                        <div class="slds-align_absolute-center">
                            <div>
                                <apex:outputPanel layout="block">
                                    <apex:pageMessages id="pgMessage"/>
                                    <!-- -----------------------------header start ---------------------------->
                                    <div class="slds-page-header" role="banner">
                                        <div class="slds-media slds-media_center">
                                            <div class="slds-media__body" style="padding:1rem">
                                                <p class="slds-page-header__title slds-truncate" title="Breadwinner is now connecting to {!connectingAppName}">Breadwinner is now connecting to {!connectingAppName}</p>
                                                <p class="slds-text-body_small">Breadwinner • Payments </p>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- -----------------------------header end ---------------------------->
                                    <div class="slds-m-top_medium slds-text-align_center">
                                        <apex:outputPanel rendered="{!connectingAppName == 'Stripe'}">
                                            <apex:commandButton id="redirectButton" value="Continue" action="{!saveConnectedAppCredentials}" reRender="theForm, pgMessage" oncomplete="NavigateToBreadwinnerPaymentsTab();message();" status="assign-action-status" styleClass="slds-button slds-button_brand"/>
                                        </apex:outputPanel> 
                                        <apex:outputPanel rendered="{!connectingAppName == 'Square'}">
                                            <apex:commandButton id="redirectButtonForSquare" value="Continue" action="{!saveSquareCredentials}" reRender="theForm, pgMessage" oncomplete="NavigateToBreadwinnerPaymentsTab();message();" status="assign-action-status" styleClass="slds-button slds-button_brand"/>
                                        </apex:outputPanel> 
                                        <apex:outputPanel rendered="{!connectingAppName == 'PayPal'}">
                                            <apex:commandButton id="redirectButtonForPayPal" value="Continue" action="{!savePayPalCredentials}" reRender="theForm, pgMessage" oncomplete="NavigateToBreadwinnerPaymentsTab();message();" status="assign-action-status" styleClass="slds-button slds-button_brand"/>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!connectingAppName == 'Authorize.Net'}">
                                            <apex:commandButton id="redirectButtonForAuthorizeNet" value="Continue" action="{!saveAuthorizeNetCredentials}" reRender="theForm, pgMessage" oncomplete="NavigateToBreadwinnerPaymentsTab();message();" status="assign-action-status" styleClass="slds-button slds-button_brand"/>
                                        </apex:outputPanel>
                                    </div>
                                </apex:outputPanel>
                                <apex:pageMessages />
                            </div>
                        </div>
                    </apex:outputPanel>

                    <!---------------------------------- Differece between read only and active mode starts---------------->
                    <div style="overflow:auto">
                        <div role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal" id="DifferenceSection">
                            <div class="slds-modal__container" style="max-width:50%">
                                <div class="slds-modal__header">
                                    <button class="slds-button slds-button_icon-inverse slds-modal__close" type="button" onclick="closeModal('DifferenceSection','diffBackdrop');">
                                        <svg aria-hidden="true" class="slds-button__icon slds-button__icon_large" >
                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#close')}" ></use>
                                        </svg>
                                        <span class="slds-assistive-text">Close</span>
                                    </button>
                                    <h2 class="slds-text-heading_medium slds-hyphenate slds-m-top_x-small"><b>What’s the difference between Read Only and Active Mode?</b></h2>
                                </div>
                                <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                    <p class="slds-p-bottom_small" align="left">
                                        In Read Only Mode, no matter what you do with Breadwinner, nothing will change in Payment Processor. Breadwinner reads from Payment Processor and updates back to Salesforce, but Breadwinner does not edit, create, or delete anything in Payment Processor.
                                    </p>
                                    <table class="slds-table slds-table_bordered slds-table_col-bordered slds-table_fixed-layout diff-table">
                                        <thead class="slds-text-title_caps">
                                            <tr scope="col">
                                                <th></th>
                                                <th style="color:rgb(75, 202, 129);"><b>Read Only Mode</b></th>
                                                <th style="color:rgba(27, 82, 151, 1.0);"><b>Active Mode</b></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td><b>Clicking “New BWP Payment” in Breadwinner</b></td>
                                                <td>No Payment will be created either in the Salesforce or Payment Processor.</td>
                                                <td>After confirming data to be created, Payment will be created in Payment Processor.</td>
                                            </tr>
                                            <tr>
                                                <td><b>Clicking “Create a Breadwinner Payments Customer”</b></td>
                                                <td>No Customer will be created either in the Salesforce or Payment Processor.</td>
                                                <td>After confirming data, new Customer will be created in Payment Processor.</td>
                                            </tr>
                                            <tr>
                                                <td><b>Clicking “Edit this Customer”</b></td>
                                                <td>The Customer will not be edited.</td>
                                                <td>The Customer will be edited.</td>
                                            </tr>
                                            <tr>
                                                <td><b>Adding a Payment directly in Payment Processor</b></td>
                                                <td colspan="2">That Payment will be replicated over to Salesforce / Breadwinner within the hour.</td>
                                            </tr>
                                            <tr>
                                                <td><b>Adding a Customer directly in Payment Processor</b></td>
                                                <td colspan="2">Breadwinner will attempt to match the new Customer to a Salesforce {!customerMatchType}, but if Breadwinner cannot match one, it will create a new Salesforce {!customerMatchType}.</td>
                                            </tr>
                                            <!--tr>
                                                <td><b>Editing a Customer directly in Payment Processor</b></td>
                                                <td colspan="2">Breadwinner updates the Customer record in Breadwinner within the hour, but no changes will be made to the Salesforce Account.</td>
                                            </tr-->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="slds-backdrop" id="diffBackdrop"></div>
                    </div>
                    <!---------------------------------- Difference between read only and active mode ends ---------------->

                    <apex:outputPanel id="setupPageContent"  rendered="{!showBWSetupContent}">
                        <div class="row slds-grid slds-wrap" style="flex-wrap: wrap; height:100%">
                            <div class="col-md-2 slds-p-horizontal_x-small slds-size_1-of-1 slds-medium-size_1-of-6 slds-large-size_2-of-12" style="border-right: 1px solid gray;">
                                <div class="slds-align_absolute-center slds-m-around_large">
                                    <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/BreadwinnerLogo.png')}" />
                                </div>
                                <hr style="margin: 0rem;border-top: 1px solid gray;" />
                                <div id="Breadwinner-Left-Menu" class="slds-grid slds-grid_vertical slds-navigation-list_vertical">
                                    <h2 class="slds-text-title_caps slds-p-around_medium" id="SETUPANDCONFIG">SETUP AND CONFIG</h2>
                                    <apex:outputPanel >
                                        <ul>
                                            <li class="slds-is-active slds-nav-vertical__item">
                                                <a href="javascript:void(0);" onclick="selectTab(this);initializeApp();onTabEnterPushToInteractionLog('Setup');" class="slds-truncate slds-nav-vertical__action slds-text-link_reset" id="Setup" title="Setup">
                                                    Setup
                                                </a>
                                            </li>
                                            
                                        </ul>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!AND(isBreadwinnerAdministrator, isProcessorConnected)}">
                                        <ul>
                                            <span id="configuration">
                                                <a href="javascript:void(0);" onclick="showhideImage('{!$Component.configurationShowHide}');showHideNestedMenu(this);" class="slds-truncate slds-text-link_reset slds-nav-vertical__action slds-p-left_x-small nohover" id="configuration" title="Confuguration">
                                                    <svg aria-hidden="true" class="slds-section__title-action-icon slds-button__icon slds-button__icon_left ">
                                                    </svg>
                                                            <apex:image id="configurationShowHide" value="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/Chevronright_Black.png')}" style="position: absolute;" width="13" height="15" />
                                                    <!--svg aria-hidden="true" class="slds-section__title-action-icon slds-button__icon slds-button__icon_left">
                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#switch')}"></use>
                                                    </svg-->
                                                    <span>Configuration</span>
                                                </a>
                                                <ul class="slds-list_vertical slds-has-block-links slds-is-nested" style="display:none;">
                                                    <li class="slds-nav-vertical__item"><a onclick="selectTab(this);onTabEnterPushToInteractionLog('Customers Configuration');refreshAppConfig();" oncomplete="reRenderHeaderSVG(dropdown);" class="slds-truncate slds-nav-vertical__action slds-text-link_reset" id="customersConfiguration" title="customersConfiguration">Customers</a></li>
                                                </ul>
                                            </span>
                                        </ul>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!OR(isBreadwinnerAdministrator, canPerformBreadwinnerOperations)}">
                                        <ul>
                                            <li class="searachableclass slds-nav-vertical__item"><a href="javascript:void(0);" onclick="selectTab(this);onTabEnterPushToInteractionLog('Permissions');" class="slds-truncate slds-nav-vertical__action slds-text-link_reset" id="Permissions" title="Permissions" >Permissions</a></li>
                                        </ul>
                                    </apex:outputPanel>
                                    <h2 class="slds-text-title_caps slds-p-around_medium" id="LEARN">LEARN</h2>
                                    <ul>
                                        <li class="searachableclass slds-nav-vertical__item">
                                            <a class="slds-truncate slds-nav-vertical__action slds-text-link_reset" href="#" id="knowledgeBase" onclick="loadIframesfun('KnowledgeBaseIframeDiv','https://help-payments.breadwinner.com/support/home?embed=true');selectTab(this);onTabEnterPushToInteractionLog('Knowledge Base');" title="Knowledge Base">
                                                Knowledge Base
                                            </a>
                                        </li>
                                        <li class="searachableclass slds-nav-vertical__item">
                                            <a class="slds-truncate slds-nav-vertical__action slds-text-link_reset" href="#" id="ContactSupport" onclick="OpenContactSupportTab();selectTab(this);onTabEnterPushToInteractionLog('Contact Support');" title="Contact Support">
                                                Contact Support
                                            </a>
                                        </li>
                                    </ul>
                                    
                                    <apex:outputPanel >
                                        <h2 class="slds-text-title_caps slds-p-around_medium" id="ADMIN">ADMIN</h2>
                                        <ul>
                                            <span id="troubleshootSection">
                                                <a href="javascript:void(0);" onclick="showhideImage('{!$Component.showHideImage}');showHideNestedMenu(this);" class="slds-truncate slds-text-link_reset slds-nav-vertical__action slds-p-left_x-small nohover" id="troubleshootSection" title="Troubleshoot">
                                                    <svg aria-hidden="true" class="slds-section__title-action-icon slds-button__icon slds-button__icon_left ">
                                                        <apex:image id="showHideImage" value="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/Chevronright_Black.png')}" style="position: absolute;" width="13" height="15" />
                                                    </svg>
                                                    Troubleshoot
                                                </a>
                                                <ul class="slds-list_vertical slds-has-block-links slds-is-nested" style="display:none;">
                                                    <li class="slds-nav-vertical__item"><a href="javascript:void(0);" onclick="selectTab(this);onTabEnterPushToInteractionLog('Troubleshoot - General');reRenderTroubleshootVariables();" oncomplete="reRenderHeaderSVG(dropdown);" class="slds-truncate slds-nav-vertical__action slds-text-link_reset" id="General-Troubleshoot" title="General" >General</a></li>
                                                    <li class="slds-nav-vertical__item"><a href="javascript:void(0);" onclick="selectTab(this);onTabEnterPushToInteractionLog('Troubleshoot - Connection');" oncomplete="reRenderHeaderSVG(dropdown);" class="slds-truncate slds-nav-vertical__action slds-text-link_reset" id="Connection-Troubleshoot" title="Connection" >Connection</a></li>
                                                    <li class="slds-nav-vertical__item"><a href="javascript:void(0);" onclick="selectTab(this);onTabEnterPushToInteractionLog('Status Logs');" class="slds-truncate slds-nav-vertical__action slds-text-link_reset" id="StatusLogs" title="Status Logs">Status Logs</a></li>
                                                </ul>
                                            </span>
                                        </ul>
                                    </apex:outputPanel>
                                    
                                </div>
                            </div>
                            
                            <!-- Breadwinner right side page starts -->
                            <div class="col-md-10 slds-size_1-of-1 slds-medium-size_5-of-6 slds-large-size_10-of-12" style="padding: 1px;">
                                <div id="breadwinner-right-content">
                                    <div id="SetupAndConfig-TAB1" class="slds-show" aria-labelledby="Setup">
                                        <div class="slds-page-header slds-m-bottom_xxx-small" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure" id="setupIcon">
                                                    <span class="slds-icon_container slds-icon-custom-custom3" title="Setup">
                                                        <svg aria-hidden="true" class="slds-icon">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom3')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Breadwinner Setup">Setup</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <apex:outputPanel id="msgPannel">
                                            <apex:pageMessages />      
                                        </apex:outputPanel>
                                        
                                        <br/>
                                        <apex:outputPanel id="setupRightContent">
                                        <!-- Arrow Path Starts -->
                                        <apex:outputPanel layout="block" id="setupArrowPath" style="padding-bottom:1px;">
                                            <div class="slds-path slds-m-bottom_x-small">
                                                <div class="slds-path__track">
                                                    <div class="slds-path__scroller-container">
                                                        <div class="slds-path__scroller" role="application">
                                                            <div class="slds-path__scroller_inner">
                                                                <ul class="slds-path__nav" role="listbox" aria-orientation="horizontal">
                                                                    <li class="slds-path__item slds-is-complete" role="presentation">
                                                                        <a aria-selected="false" class="slds-path__link" href="javascript:void(0);" role="option" tabindex="-1">
                                                                            <span class="slds-path__stage" id="stage1">
                                                                                <svg class="slds-icon slds-icon_x-small" aria-hidden="true">
                                                                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                                                                </svg>
                                                                                <span class="slds-assistive-text">Breadwinner Installed</span>
                                                                            </span>
                                                                            <span class="slds-path__title">Breadwinner Installed</span>
                                                                        </a>
                                                                    </li>
                                                                    <li style="display: {!IF(OR(OR(bwSetting.Status=='subscribed', orgInfo.IsSandbox, orgInfo.OrganizationType == 'Developer Edition'), bwSetting.Status== 'expired'), '', 'none')}" class="slds-path__item {!If(OR(bwSetting.Status=='expired',!bwSetting.Active),'slds-is-active','slds-is-complete')}" role="presentation" >
                                                                        
                                                                        <a aria-selected="false" class="slds-path__link" href="javascript:void(0);" role="option" tabindex="-1">
                                                                            <span class="slds-path__stage" id="stage2">
                                                                                <svg class="slds-icon slds-icon_x-small" aria-hidden="true">
                                                                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                                                                </svg>
                                                                                <span class="slds-assistive-text">
                                                                                    <apex:outputText >   {!IF(bwSetting.Status =='subscribed','Subscribed',IF(bwSetting.Status =='trial','In Trial','Trial/Subscription Expired'))} </apex:outputText> 
                                                                                </span>
                                                                            </span>
                                                                            <span class="slds-path__title">
                                                                                <apex:outputText >    {!IF(bwSetting.Status =='subscribed','Subscribed',IF(bwSetting.Status =='trial','In Trial','Trial/Subscription Expired'))} </apex:outputText> 
                                                                            </span>
                                                                        </a>
                                                                    </li>
                                                                    
                                                                    <li class="slds-path__item {!IF(AND(bwSetting.Active, bwSetting.Status != 'expired'), IF(isProcessorConnected,'slds-is-complete','slds-is-active'),'slds-is-incomplete')}" role="presentation">
                                                                        <a aria-selected="false" class="slds-path__link" href="javascript:void(0);" role="option" tabindex="-1">
                                                                            <span class="slds-path__stage" id="stage3">
                                                                                <svg class="slds-icon slds-icon_x-small" aria-hidden="true">
                                                                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                                                                </svg>
                                                                                <span class="slds-assistive-text">
                                                                                    <apex:outputText > {!IF(isProcessorConnected,'Payment Processor Connected','Connect with a Payment Processor')}</apex:outputText>
                                                                                </span>
                                                                            </span>
                                                                            <span class="slds-path__title">
                                                                                <apex:outputText >  {!IF(isProcessorConnected,'Payment Processor Connected','Connect with a Payment Processor')}  </apex:outputText>
                                                                            </span>
                                                                        </a>
                                                                    </li>
                                                                    <!-- 
<li class="slds-path__item {!IF(AND(bwSetting.Active, isProcessorConnected), IF(AND(bwSetting.Page_Layouts_Updated, NOT(unableToAddRemoteSiteSetting)),'slds-is-complete','slds-is-active'),'slds-is-incomplete')}" role="presentation"> 
<a aria-selected="false" class="slds-path__link" href="javascript:void(0);" role="option" tabindex="-1">
<span class="slds-path__stage" id="stage3">
<svg class="slds-icon slds-icon_x-small" aria-hidden="true">
<use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#check')}" />
</svg>
<span class="slds-assistive-text">
<apex:outputText >  {!IF(bwSetting.Page_Layouts_Updated,'Pagelayouts Updated','Update Pagelayouts')} </apex:outputText>
</span>
</span>
<span class="slds-path__title"> <apex:outputText >{!IF(AND(bwSetting.Page_Layouts_Updated, NOT(unableToAddRemoteSiteSetting)),'Pagelayouts Updated','Update Pagelayouts')}</apex:outputText></span>
</a>
</li> 
-->
                                                                    <li class="slds-path__item {!IF(AND(bwSetting.Active,isProcessorConnected), IF(AND(appC.isCustomerMatchComplete , unMatchedRecordCount == 0),'slds-is-complete',IF(isProcessorConnected,'slds-is-active','slds-is-incomplete') ),'slds-is-incomplete')}" role="presentation">
                                                                        <a aria-selected="false" class="slds-path__link" href="javascript:void(0);" role="option" tabindex="-1">
                                                                            <span class="slds-path__stage" id="stage5">
                                                                                <svg class="slds-icon slds-icon_x-small" aria-hidden="true">
                                                                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                                                                </svg>
                                                                                <span class="slds-assistive-text"><apex:outputText >{!IF(AND(bwSetting.Active, isProcessorConnected,appC.isCustomerMatchComplete,unMatchedRecordCount == 0),'Customers Matched','Match Customers')}</apex:outputText></span>
                                                                            </span>
                                                                            <span class="slds-path__title"><apex:outputText >{!IF(AND(bwSetting.Active, isProcessorConnected, appC.isCustomerMatchComplete,unMatchedRecordCount == 0),'Customers Matched','Match Customers')}</apex:outputText></span>
                                                                        </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                </div>
                                            </div>
                                        </apex:outputPanel>
                                        <!-- Arrow Path Ends -->
                                        
                                        <div class="slds-p-horizontal_x-small">
                                            <apex:actionFunction name="changeBreadwinnerMode" action="{!changeBreadwinnerMode}" reRender="bwModeText" status="action-status"/>
                                            <table class="slds-table slds-no-row-hover slds-table_bordered slds-max-medium-table_stacked-horizontal slds-m-top_small setup-table table-space " style="border-top: none;">
                                                <!-- Read only mode section -->
                                                <tr>
                                                    <td>
                                                        <div class="slds-text-heading_medium">                                                            
                                                            <apex:outputText id="bwModeText" value="Breadwinner is currently in {!IF(bwSetting.activeMode,'Active Mode','Read Only Mode')}"></apex:outputText>
                                                        </div>
                                                    </td>
                                                    <td style="width: 10%;">
                                                        <div class="bwMode iconDiv">
                                                            <label class="slds-checkbox_toggle" style="margin-right: 0px;">
                                                                <apex:inputCheckbox id="bwModeToggle" value="{!bwSetting.activeMode}" onclick="changeBreadwinnerMode();" disabled="{!OR(NOT(isBreadwinnerAdministrator),bwSetting.Status =='expired')}"/>
                                                                <span class="slds-checkbox_faux_container" aria-live="assertive">
                                                                <span class="slds-checkbox_faux"></span>
                                                                </span>
                                                            </label>
                                                        </div>
                                                    </td>
                                                    <td style="width: 45%;">
                                                        <div class="slds-text-body_small last-col-content">
                                                            <a href="javascript:void(0);" onclick="showModal('DifferenceSection','diffBackdrop');" class="GrayLinks">Explain the difference between Read Only and Active Modes</a>
                                                        </div>
                                                    </td>
                                                </tr>
                                                
                                                <!-- Data Subscription section -->
                                                <tr>
                                                    <td>
                                                        <apex:outputPanel layout="block" styleClass="slds-text-heading_medium">
                                                            <apex:outputText value="{!IF(bwSetting.Status =='subscribed','You have an active, valid subscription to Breadwinner',IF(bwSetting.Status =='trial','Your fully-featured free trial has been activated','Your Data Subscription to Breadwinner has Expired'))}" />
                                                        </apex:outputPanel>
                                                        
                                                        <apex:outputPanel layout="block" rendered="{!IF(OR(bwSetting.Status =='expired',bwSetting.Status == null), true, false)}" styleClass="slds-text-body_small" > 
                                                            <apex:outputText >  Please contact sales@breadwinner.com </apex:outputText>
                                                        </apex:outputPanel>
                                                    </td>
                                                    <td>
                                                        <div class="iconDiv">
                                                            <apex:outputPanel id="connectionCheck1">
                                                                <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/GreenCheck.png')}" id="redchk1" rendered="{!AND(bwSetting.Active,OR(bwSetting.Status =='subscribed', bwSetting.Status =='trial'))}" />
                                                                <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/RedCheck.png')}" id="greenchk1" rendered="{!OR(NOT(bwSetting.Active), bwSetting.Status =='expired')}" />
                                                            </apex:outputPanel>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <apex:outputPanel layout="block" styleClass="slds-text-heading_medium last-col-content" rendered="{!IF(bwSetting.Status =='trial', true, false)}">
                                                            <apex:outputText > Your trial will expire in {!noOfDaysLeft} {!If(noOfDaysLeft > 1, 'Days', 'Day')} </apex:outputText>
                                                        </apex:outputPanel>
                                                    </td>
                                                </tr>
                                                
                                                <!-- Connect to bw stripe section-->
                                                <tr>
                                                    <td>
                                                        <apex:outputPanel layout="block" id="consumerHeaderPanelMO">
                                                            <div class="slds-text-heading_medium">
                                                                Connect Breadwinner to your Payment Processor
                                                            </div>
                                                            <apex:outputPanel layout="block" styleClass="slds-text-body_small" style="margin-left: 0.35rem;" rendered="{!AND(isBreadwinnerAdministrator, !isMultiProcessorEnabled)}">
                                                                Need to connect more than one Payment Processor to Salesforce? Please&nbsp;
                                                                <apex:outputLink onclick="OpenContactSupportTab();loadIframesfun('Contact_SupportPage','{!BW_SupportPortalURL}/customer/portal/emails/new?t=711718');" value="javascript:void(0);" id="ContactSupportForMultiOrg" styleClass="GrayLinks">contact Breadwinner Support</apex:outputLink>
                                                            </apex:outputPanel>
                                                        </apex:outputPanel>
                                                    </td>
                                                    <td>
                                                        <div class="iconDiv">
                                                            <apex:outputPanel id="connectionCheck">
                                                                <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/RedCheck.png')}" id="redchk" rendered="{!(NOT(isProcessorConnected) || needToReconnect || !bwSetting.Active)}" />
                                                                <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/GreenCheck.png')}" id="greenchk" rendered="{!(isProcessorConnected && !needToReconnect && bwSetting.Active)}" />
                                                            </apex:outputPanel>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div>
                                                            <apex:outputPanel layout="block" id="connectionInfoPanel">
                                                                <apex:outputPanel rendered="{!OR(AND(bwSetting.Active,bwSetting.Active != null) , isProcessorConnected)}">
                                                                    <apex:commandlink styleClass="slds-m-left_xx-small" rendered="{!AND(isBreadwinnerAdministrator, NOT(isProcessorConnected))}" style="color: rgb(0, 109, 204);font-style:italic;font-weight:600" value="Connect with a Payment Processor" status="assign-action-status" onclick="showModal('chooseProcessorModal','backdrop','','');" rerender="selectPaymentProcessorSection, paymentProcessorsSection" >
                                                                        <!--apex:param name="selectedProcessorType" assignTo="{!selectedProcessorType}" value="stripe" /-->
                                                                    </apex:commandlink>
                                                                    <apex:repeat value="{!appConfigList}" var="appC">
                                                                        <apex:outputPanel layout="block" rendered="{!isProcessorConnected}" styleClass="slds-text-heading_medium">
                                                                            <div>
                                                                                <apex:outputText value="{!if(appC.accountName != NULL, appC.accountName, appC.PaymentProcessorType )} is connected" ></apex:outputText>
                                                                            </div>
                                                                            <div>
                                                                                <label style="color:grey;font-size: 12px;font-weight: 400;margin-right: 0rem !important"><b>Processor:</b> {!appC.PaymentProcessorType}&nbsp;<b>Mode:</b> {!IF(appC.livemode == false, 'Test','Live')}</label>&nbsp;
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!stripeAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'Stripe', appC.liveMode)}">
                                                                                    <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!stripeTestAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'Stripe', !appC.liveMode)}">
                                                                                    <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:commandlink styleClass="slds-text-body_small" style="font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" value="Reconnect" status="assign-action-status" onclick="showModal('chooseProcessorModal','backdrop','','');" rerender="selectPaymentProcessorSection, paymentProcessorsSection" rendered="{!AND(isBreadwinnerAdministrator, appC.PaymentProcessorType == 'Braintree')}" >
                                                                                    <apex:param name="selectedProcessorType" assignTo="{!selectedProcessorType}" value="braintree" />
                                                                                </apex:commandlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!squareAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'Square', appC.liveMode)}">
                                                                                    <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!squareTestAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'Square', !appC.liveMode)}">
                                                                                    <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!PayPalAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'PayPal', appC.liveMode)}">
                                                                                    <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!PayPalTestAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'PayPal', !appC.liveMode)}">
                                                                                    <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!AuthorizeNetAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'Authorize.Net', appC.liveMode)}">
                                                                                        <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>
                                                                                <apex:outputlink style="color:grey;font-size:{!IF(appC.needToReconnect, '18px', '12px')};color:{!IF(appC.needToReconnect, 'red', 'grey')};font-weight: 400;" styleClass="slds-text-body_small" value="{!AuthorizeNetTestAuthUrl}" target="_top" rendered="{!AND(isBreadwinnerAdministrator, bwSetting.Status!='expired', appC.PaymentProcessorType == 'Authorize.Net', !appC.liveMode)}">
                                                                                        <apex:outputText value="Reconnect" />
                                                                                </apex:outputlink>&nbsp;
                                                                                <apex:commandlink styleClass="slds-text-body_small" style="color:grey;font-size:12px;font-weight: 400" value="Disconnect" status="assign-action-status" onclick="showModal('disconnectmodal','backdrop','','');" rerender="disconnectModalSection" rendered="{!isBreadwinnerAdministrator}" >
                                                                                    <apex:param name="disconnectAppId" assignTo="{!disconnectAppId}" value="{!appC.accountId}"/>
                                                                                    <apex:param name="disconnectPaymentProcessorType" assignTo="{!disconnectPaymentProcessorType}" value="{!appC.paymentProcessorType}" />
                                                                                </apex:commandlink>
                                                                            </div>
                                                                        </apex:outputPanel>
                                                                    </apex:repeat>
                                                                    <apex:outputPanel rendered="{!AND((isMultiProcessorEnabled ),(isBreadwinnerAdministrator),(processorConfigList!=null&&processorConfigList.size>0))}">
                                                                        <apex:commandlink styleClass="slds-m-left_xx-small" style="color: rgb(0, 109, 204);font-style:italic;font-weight:600" value="Add another Payment Processor" status="assign-action-status" onclick="showModal('chooseProcessorModal','backdrop','','');" rerender="selectPaymentProcessorSection, paymentProcessorsSection, authErrors" >
                                                                        </apex:commandlink>&nbsp;
                                                                    </apex:outputPanel>
                                                                    

                                                                    <apex:outputPanel id="messageModalPanel">
                                                                        <div>
                                                                            <div id="messageModal" class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog">
                                                                                <div class="slds-modal__container">
                                                                                    <div class="slds-modal__header">
                                                                                        <h2 class="slds-text-heading_medium">
                                                                                            {!IF(isBraintreeConnected, 'Breadwinner Payments is now connected to Braintree','')}
                                                                                        </h2>
                                                                                    </div>
                                                                                    <div class="slds-modal__content slds-p-around_medium">
                                                                                        <div class="slds-text-align_left">
                                                                                            Breadwinner Payments is successfully connected to your Braintree Account.
                                                                                        </div>
                                                                                        <div class="slds-m-top_medium slds-text-align_right">
                                                                                            <apex:commandbutton id="tsOKCancelBtn2" styleClass="btns slds-button slds-button_brand" status="assign-action-status" value="OK" oncomplete="closeModal('messageModal','messageBackdrop');reRendercheckmarkSVGIcons();resetBraintreeAPIKeys();rerenderEntirePage();" action="{!refreshAppConfig}" style="width:70px;" reRender="setupRightContent, accountMatchRelatedScript" />
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <apex:actionFunction name="rerenderEntirePage" action="{!rerenderThisPage}" oncomplete=""/>
                                                                            <div class="slds-backdrop" id="messageBackdrop"></div>
                                                                        </div>
                                                                        <!-- Success message -->
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                        </div>
                                                    </td>
                                                </tr>
                                                
                                                <!-- Page layouts update section starts -
<tr>
<td >
<div class="slds-text-heading_medium">
<apex:outputPanel id="pageLayoutHeadingPanel" >
<script type="text/javascript">
function createRemoteSiteMetadata(){
    try{
        var binding = new XMLHttpRequest();
        var host = "{!LEFT($Api.Enterprise_Server_URL_330, FIND('/services',$Api.Enterprise_Server_URL_330))}";
        var request = 
            '<?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><env:Header><SessionHeader xmlns="http://soap.sforce.com/2006/04/metadata"><sessionId>{!$Api.Session_ID}</sessionId></SessionHeader></env:Header><env:Body><upsertMetadata xmlns="http://soap.sforce.com/2006/04/metadata"><metadata xsi:type="RemoteSiteSetting"><fullName>Breadwinner_Xero_MyServer</fullName><description>Required to use Metadata API, created by Breadwinner</description><disableProtocolSecurity>false</disableProtocolSecurity><isActive>true</isActive><url>'+host+'</url></metadata></upsertMetadata></env:Body></env:Envelope>';
        
        binding.open('POST', host+'services/Soap/m/33.0');
        binding.setRequestHeader('SOAPAction','""');
        binding.setRequestHeader('Content-Type', 'text/xml');
        binding.onreadystatechange =
            function() {
            if(this.readyState==4) {
                var parser = new DOMParser();
                var doc  = parser.parseFromString(this.response, 'application/xml');
                var errors = doc.getElementsByTagName('errors');
                console.log(errors);
            }
        }
        binding.send(request);
    }
    catch(error){
        console.log(error);
    }
}
</script>
<apex:outputPanel rendered="{!unableToAddRemoteSiteSetting && NOT(bwSetting.Page_Layouts_Updated)}" >
<a  target="_blank" style="color:gray" href="{!BW_SupportPortalURL}/customer/portal/articles/1607408-configure-your-page-layouts">
Read Instructions
</a>
on configuring your Page Layouts
<div class="slds-text-body_small">
(we can&apos;t monitor this, so no green check will appear)
</div>
</apex:outputPanel>
<apex:outputPanel rendered="{!OR(NOT(unableToAddRemoteSiteSetting),bwSetting.Page_Layouts_Updated)}">

<apex:outputPanel rendered="{!AND(processorConfigList.size>0,NOT(OR(isLayoutUpdated, bwSetting.Page_Layouts_Updated)),isAdministrator)}">
<apex:commandLink style="color:black" oncomplete="updatingPageLayouts();" reRender="noofAssignee,pmStatus" status="assign-action-status">Update Account Page Layouts</apex:commandLink>
</apex:outputPanel>
<apex:outputPanel rendered="{!OR(processorConfigList.size==0,isLayoutUpdated, NOT(isAdministrator), bwSetting.Page_Layouts_Updated)}">
Update Account Page Layouts
</apex:outputPanel> 
</apex:outputPanel>
<apex:outputPanel rendered="{!AND(unableToAddRemoteSiteSetting,!bwSetting.Page_Layouts_Updated)}">Update Account Page Layouts
</apex:outputPanel>
</apex:outputPanel>
</div>
</td>
<td>
<div>
<apex:outputPanel id="LayoutsUpdateCheck">
<apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/RedCheck.png')}" id="redchk4" rendered="{!OR(!bwSetting.Page_Layouts_Updated, NOT(isProcessorConnected), !bwSetting.Active)}" />
<apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/GreenCheck.png')}" id="greenchk4" rendered="{!AND(bwSetting.Page_Layouts_Updated, isProcessorConnected, bwSetting.Active)}" />
</apex:outputPanel>
</div>
</td>
<td/>
</tr-->
<!-- Page layouts update section Ends -->
                                                <!--apex:outputPanel id="accountMatchSection"-->
                                                    
                                                    <tr>
                                                        <td>
                                                            <div Class="slds-text-heading_medium">
                                                                <apex:outputText styleClass="slds-text-heading_medium" style="font-weight:2">Match Breadwinner Payments Customers to Salesforce Accounts/Contacts?</apex:outputText>
                                                            </div>                                                        
                                                        </td>
                                                        <td>
                                                            <div class="iconDiv">
                                                                <apex:outputPanel id="AccountMatchCheck">
                                                                    <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/RedCheck.png')}" id="redchk3" rendered="{!OR(NOT(isCustomerMatchComplete), !bwSetting.Active)}" />
                                                                    <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/GreenCheck.png')}" id="greenchk3" rendered="{!AND(isCustomerMatchComplete, NOT(areThereUnmatchedCustomers), bwSetting.Active)}" />
                                                                    <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/YellowCheck.png')}" id="yellowchk3" rendered="{!AND(isCustomerMatchComplete, areThereUnmatchedCustomers, bwSetting.Active)}" />
                                                                </apex:outputPanel>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div>
                                                                <apex:outputPanel rendered="{!AND(isProcessorConnected, OR(isBreadwinnerAdministrator, canPerformBreadwinnerOperations))}">
                                                                    <apex:outputPanel rendered="{!!isAccountMatchDoneForAllProcessors}">
                                                                        <div class="slds-form-element__control slds-m-left_xx-small" style="display: inline-flex">
                                                                            <apex:outputPanel rendered="{!OR(displayCustomerMatchOptions, isAccountMatchComplete)}">
                                                                                <span class="slds-radio">
                                                                                    <input type="radio" id="accountSync" name="syncOptions" onclick="selectSyncObject('Account');"/>
                                                                                    <label class="slds-radio__label" for="accountSync">
                                                                                        <span class="slds-radio_faux"></span>
                                                                                        <span class="slds-form-element__label">Account</span>
                                                                                    </label>
                                                                                </span>
                                                                            </apex:outputPanel>
                                                                            <apex:outputPanel rendered="{!OR(displayCustomerMatchOptions, isContactMatchComplete)}">
                                                                                <span class="slds-radio">
                                                                                    <input type="radio" id="contactSync" name="syncOptions" onclick="selectSyncObject('Contact');" />
                                                                                    <label class="slds-radio__label" for="contactSync">
                                                                                        <span class="slds-radio_faux"></span>
                                                                                        <span class="slds-form-element__label">Contact</span>
                                                                                    </label>
                                                                                </span> 
                                                                            </apex:outputPanel>
                                                                        </div>
                                                                        <br/>
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel id="accountMatchRelatedScript">
                                                                        <script>
                                                                            if(document.getElementById('accountSync') != null){
                                                                                document.getElementById('accountSync').checked = true;
                                                                                selectSyncObject('Account');
                                                                            }
                                                                            else if(document.getElementById('contactSync') != null){
                                                                                document.getElementById('contactSync').checked = true;
                                                                                selectSyncObject('Contact');
                                                                            }
                                                                        </script>
                                                                    </apex:outputPanel>
                                                                    <apex:actionFunction id="refreshSycPannel" status="assign-action-status" name="refreshSycPannel" reRender="syncLinks"/>
                                                                    <apex:outputPanel id="syncLinks" >
                                                                        <apex:repeat value="{!appConfigList}" var="appC" rendered="{!OR(isBreadwinnerAdministrator, canPerformBreadwinnerOperations)}">
                                                                        <apex:outputLink value="{!$Page.CustomerOperations}" styleClass="slds-text-heading_small slds-m-left_xx-small" rendered="{!NOT(appC.isCustomerMatchComplete)}" style="color:red;">
                                                                                 Preview {!customerMatchType} Match for {!if(appC.accountName != NULL, appC.accountName, appC.PaymentProcessorType )}
                                                                                <apex:param name="processorId" value="{!appC.accountId}" /><br/>
                                                                                <apex:param name="customerMatchType" value="{!customerMatchType}" /><br/>
                                                                            </apex:outputLink>
                                                                            <apex:outputLink value="{!$Page.CustomerOperations}" styleClass="slds-text-heading_x-small slds-m-left_xx-small" style="color:red;" rendered="{!AND(areThereUnmatchedCustomers, unmatchedCustomersStatusMap[appC.accountId] , appC.isCustomerMatchComplete)}">Preview {!appC.customerMatchType} Match for {!if(appC.accountName != NULL, appC.accountName, appC.PaymentProcessorType )}
                                                                                <apex:param name="processorId" value="{!appC.accountId}" /><br/>
                                                                                <apex:param name="customerMatchType" value="{!customerMatchType}" /><br/>
                                                                            </apex:outputLink>
                                                                        </apex:repeat>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel> 
                                                            </div>
                                                        </td>
                                                    </tr> 
                                                <!--/apex:outputPanel-->              
                                                <tr>
                                                    <td>
                                                        <div class="slds-text-heading_medium">
                                                            Subscribe to Breadwinner
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <apex:outputPanel layout="block" rendered="{!NOT(OR(orgInfo.IsSandbox, orgInfo.OrganizationType=='Developer Edition'))}" styleClass="iconDiv">
                                                            <apex:image styleClass="crossIcon" value="{!URLFOR($Resource.Breadwinner_Payments, 'Breadwinner_Payments/images/GreenCheck.png')}" rendered="{!bwSetting.Status == 'subscribed'}"/>
                                                            <apex:image styleClass="crossIcon" value="{!URLFOR($Resource.Breadwinner_Payments, 'Breadwinner_Payments/images/YellowCheck.png')}" rendered="{!bwSetting.Status=='trial'}"/>
                                                            <apex:image styleClass="crossIcon" value="{!URLFOR($Resource.Breadwinner_Payments, 'Breadwinner_Payments/images/RedCheck.png')}" rendered="{!bwSetting.Status == 'expired'}"/>
                                                        </apex:outputPanel>
                                                    </td>
                                                    <td></td>
                                                </tr>
                                                <tr>
                                                    <td style="border:none;" class="slds-text-body_small slds-m-top_none" colspan="3">
                                                        <div style="margin-left: 0.35rem;">
                                                            <apex:outputPanel rendered="{!bwSetting.Status == 'subscribed'}">
                                                                Your subscription to Breadwinner is Active.
                                                            </apex:outputPanel>
                                                            
                                                            <apex:outputPanel rendered="{!bwSetting.Status=='trial'}">
                                                                <apex:outputPanel rendered="{!AND(NOT(orgInfo.IsSandbox), orgInfo.OrganizationType!='Developer Edition')}">
                                                                    <apex:outputText >   To guarantee continued access, subscribe to Breadwinner before <br/>
                                                                        your trial expires in  {!noOfDaysLeft} days. We will email you with more information. </apex:outputText>
                                                                    <br/>
                                                                    <a href="{!BW_API_BaseURL}/payment/{!$Organization.Id}" target="_blank" onclick="pushPaymentClickLog();" id="SubscribeBreadwinnerInTrail" class="GrayLinks">Click here to Subscribe to Breadwinner</a>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!orgInfo.IsSandbox}">
                                                                    This is running in a Sandbox. Because payment is tied to the instance where Breadwinner is installed, you can only pay for Breadwinner from a production org, not a Sandbox.<br/>
                                                                    If this was a Salesforce Production org, you would be given the option to pay here.
                                                                    <br/> <br/>
                                                                    <apex:outputText >  If you need to extend your free trial, which will expire in {!noOfDaysLeft} days, please click Contact Support to the left and file a case requesting a 2 week extension of your Sandbox trial. </apex:outputText>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                            
                                                            <apex:outputPanel rendered="{!orgInfo.OrganizationType=='Developer Edition'}">
                                                                <apex:outputText > You cannot subscribe on a Developer Org.<br/>
                                                                    However, you can request an extension of your free trial{!IF(bwSetting.Status =='expired','',', which expires in '+Text(noOfDaysLeft)+' days,')} </apex:outputText>&nbsp;by&nbsp;<apex:outputLink onclick="OpenContactSupportTab();loadIframesfun('Contact_SupportPage','{!BW_SupportPortalURL}/customer/portal/emails/new?t=711718');" value="javascript:void(0);" id="ContactSupportForExtension" styleClass="GrayLinks">contacting Breadwinner Support</apex:outputLink>
                                                                <br/><apex:outputText >Please mention that your Org ID is {!$Organization.Id}</apex:outputText>
                                                            </apex:outputPanel>
                                                            
                                                            <apex:outputPanel rendered="{!bwSetting.Status == 'expired'}">
                                                                <apex:outputPanel rendered="{!AND(NOT(orgInfo.IsSandbox), orgInfo.OrganizationType!='Developer Edition')}">
                                                                    You don't have an active subscription to Breadwinner.<br/>
                                                                    <br/>
                                                                    <a href="{!BW_API_BaseURL}/payment/{!$Organization.Id}" target="_blank" onclick="pushPaymentClickLog();" id="SubscribeBreadwinnerForActivation" class="GrayLinks">Click here to Subscribe to Breadwinner</a>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!orgInfo.IsSandbox}">
                                                                    <apex:outputText >   This is a Sandbox Salesforce org, and you cannot pay for Breadwinner in a Sandbox, only in a Production Org.
                                                                        <br/>
                                                                        However, if you need to extend your free trial, please file a case using the Contact Support section on the left, requesting a trial extension, and please quote Org ID <b>{!$Organization.Id}</b>. </apex:outputText>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </table>
                                            <div class="slds-m-top_small">
                                                <div class="slds-grid slds-wrap">
                                                    <div class="slds-size_1-of-1 slds-medium-size_3-of-6 slds-large-size_6-of-12">
                                                            <apex:commandLink action="{!showEditSettingSection}" status="assign-action-status" rerender="SettingSectionPanel" rendered="{!isBreadwinnerAdministrator}"> .
                                                            </apex:commandLink>
                                                            <apex:outputPanel layout="block" styleClass="slds-m-horizontal_medium slds-m-bottom_medium" id="SettingSectionPanel">
                                                                <apex:outputPanel rendered="{!isEditSettingSection}">  
                                                                    <div class="slds-box slds-float_left">
                                                                        <label class="slds-checkbox">
                                                                            <span class="slds-form-element__label">
                                                                                {!$ObjectType.Breadwinner_Settings__c.Fields.Multi_Processor_Enabled__c.Label}
                                                                            </span>
                                                                            <apex:inputCheckbox value="{!bwSetting.multiProcessorEnabled}"/> 
                                                                            <span class="slds-checkbox_faux"></span>
                                                                            
                                                                        </label>
                                                                        <div class="slds-m-top_medium">
                                                                            <apex:commandButton value="Save" styleClass="slds-button slds-button_brand" action="{!saveSettingSection}" status="assign-action-status"/>   
                                                                            <apex:commandButton value="Cancel" styleClass="slds-button slds-button_neutral" action="{!cancelSettingSection}" reRender="SettingSectionPanel" status="assign-action-status"/>
                                                                        </div>  
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                        </div>
                                                        <div align="right" class="slds-size_1-of-1 slds-medium-size_3-of-6 slds-large-size_6-of-12">
                                                            <apex:commandLink action="{!showEndpointUrlEditor}" status="action-status" reRender="availableURLs" rendered="{!NOT(isProcessorConnected)}" id="showUrlEditorBtn" styleClass="GrayLinks" oncomplete="createRemoteSiteMetadata('', '');">.</apex:commandLink>
                                                            <apex:outputPanel id="availableURLs" layout="block">
                                                                <apex:outputPanel layout="block" styleClass="slds-box slds-float_right" rendered="{!showEndpointURLSetting}">
                                                                    <div class="slds-form-element">
                                                                        <label class="slds-form-element__label" >Endpoint URL</label>
                                                                        <div class="slds-form-element__control">
                                                                            <div class="slds-select_container">
                                                                                <apex:selectList value="{!bwSetting.endpointURL}" size="1" styleClass="slds-select">
                                                                                    <apex:selectOptions value="{!AvailableEndpointURLs}" />
                                                                                </apex:selectList>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="slds-m-top_small">
                                                                        <apex:commandButton value="Save" action="{!updateEndpointUrl}" styleClass="slds-button slds-button_brand" status="action-status" id="saveEndpointURLBtn"/>
                                                                        <apex:commandButton value="Cancel" action="{!hideEndpointUrlEditor}" reRender="availableURLs" status="action-status" styleClass="slds-button slds-button_neutral" id="CancelUrlEditorBtn"/>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                        </div>
                                                    </div>
                                            </div>
                                            <div class="form_key"></div>
                                            
                                            
                                        </div>
                                    </apex:outputpanel>
                                    </div>
                                    <!-- Adding SLDS Modal To Choose Payment Processor -->
                                    <apex:outputPanel id="connectMultipleProcessorSection" layout="block">
                                        <div class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog" id="chooseProcessorModal">
                                            <div class="slds-modal__container">
                                                <header class="slds-modal__header">
                                                    <button class="slds-button slds-button_icon-inverse slds-modal__close" type="button" title="Close" onclick="closeModal('chooseProcessorModal','backdrop');resetBraintreeAPIKeys();">
                                                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                                        <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                                        </svg>
                                                        <span class="slds-assistive-text">Close</span>
                                                    </button>
                                                    <h2 class="slds-text-heading_medium">Connect with a Payment Processor</h2>
                                                </header>
                                                <div class="slds-modal__content slds-p-around_medium">
                                                    <apex:outputPanel id="authErrors">
                                                        <apex:outputPanel layout="block" styleClass="slds-text-align_center slds-text-heading_small slds-m-bottom_xx-small" style="color: red" rendered="{!If(AND(braintreeAuthErrors != null, selectedProcessorType == 'braintree'), true, false)}">
                                                            <apex:outputText value="Error: {!braintreeAuthErrors}" />
                                                        </apex:outputPanel>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel id="selectPaymentProcessorSection">
                                                        <div class="slds-form-element">
                                                            <span class="slds-form-element__label">Select Payment Processor Type</span>
                                                            <div class="slds-form-element__control">
                                                                <div class="slds-select_container">
                                                                    <apex:selectList id="selectedprocessorType" value="{!selectedProcessorType}" size="1" styleClass="slds-select" onchange="paymentProcessorsSection();"> 
                                                                        <apex:selectOptions value="{!PaymentProcessorsList}"/>
                                                                    </apex:selectList>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>
                                                    <apex:actionFunction name="paymentProcessorsSection" status="assign-action-status" reRender="paymentProcessorsSection, authErrors" />
                                                    <div id="multiOrgConnectionSection" class="slds-m-top_xx-small">
                                                        <!-- For Stripe -->
                                                        <apex:outputPanel id="paymentProcessorsSection" layout="block" styleClass="slds-m-bottom_x-small">
                                                            <apex:outputPanel id="stripeRemoteSiteError" >
                                                                <apex:outputPanel layout="block"  style="font-weight:Bold;font-style: italic;margin-top: 12px; text-align: center;" rendered="{!IF((AND(selectedProcessorType == 'stripe',unableToAddRemoteSiteSetting)), true, false)}">
                                                                    Breadwinner is unable to read your Remote Site Settings. Please create the Remote Site Settings manually with the help of <a href="https://help-payments.breadwinner.com/support/solutions/articles/44001952121-create-remote-sites-in-breadwinner-payments" target="_blank"> this article</a>. 
                                                                    If already added, please ignore and proceed.
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel layout="block" styleClass="slds-m-top_medium slds-align_absolute-center" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'stripe')}" >
                                                                <apex:outputLink value="{!stripeAuthUrl}" target="_top" onclick="createRemoteSiteMetadata('Stripe_Authentication', 'https://connect.stripe.com');createRemoteSiteMetadata('Stripe_API', 'https://api.stripe.com');">
                                                                    <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/ConnectWithStripe.png')}" />
                                                                </apex:outputLink>
                                                                <apex:outputPanel style="padding-left:10px">
                                                                    <apex:outputLink value="{!stripeTestAuthUrl}" target="_top" styleClass="slds-text-body_small" onclick="createRemoteSiteMetadata('Stripe_Authentication', 'https://connect.stripe.com');createRemoteSiteMetadata('Stripe_API', 'https://api.stripe.com');">Connect Stripe in TEST Mode</apex:outputLink>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                            <!-- For Braintree -->
                                                            <apex:outputPanel layout="block" styleClass="slds-m-top_small" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'braintree')}">
                                                                <apex:outputLink value="https://articles.braintreepayments.com/control-panel/important-gateway-credentials#api-keys" target="_blank" styleClass="slds-text-body_small">Click here</apex:outputLink> 
                                                                <apex:outputpanel styleClass="slds-text-body_small" style="color: gray;">&nbsp;to generate API Keys from Braintree.</apex:outputpanel>
                                                                <apex:outputPanel layout="block" styleClass="slds-m-top_x-small" id="braintreePublicKey">
                                                                    <div class="slds-form-element">
                                                                        <span class="slds-form-element__label">Public Key</span>
                                                                        <div class="slds-form-element__control">
                                                                            <apex:inputtext id="publicKey" value="{!braintreePublicKey}" styleClass="slds-input" />
                                                                        </div>
                                                                    </div>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel layout="block" styleClass="slds-m-top_x-small slds-m-bottom_x-small" id="braintreePrivateKey">
                                                                    <div class="slds-form-element">
                                                                        <span class="slds-form-element__label">Private Key</span>
                                                                        <div class="slds-form-element__control">
                                                                            <apex:inputtext id="privateKey" value="{!braintreePrivateKey}" styleClass="slds-input" />
                                                                        </div>
                                                                    </div>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel styleClass="slds-text-body_small"  style="color: gray;">Note: Breadwinner doesn't store your Braintree API Keys, instead it stores a single value by encoding the two keys, as required for&nbsp;<apex:outputLink value="https://graphql.braintreepayments.com/guides/making_api_calls/#request-requirements" target="_blank">Braintree Authorization</apex:outputLink>.</apex:outputPanel>
                                                                <apex:outputPanel id="braintreeRemoteSiteError" >
                                                                    <apex:outputPanel layout="block"  style="font-weight:Bold;font-style:italic;margin-top: 10px; text-align: center;" rendered="{!IF((AND(selectedProcessorType == 'braintree',unableToAddRemoteSiteSetting)), true, false)}">
                                                                        Breadwinner is unable to read your Remote Site Settings. Please create the Remote Site Settings manually with the help of <a href="https://help-payments.breadwinner.com/support/solutions/articles/44001952121-create-remote-sites-in-breadwinner-payments" target="_blank"> this article</a>. 
                                                                        If already added, please ignore and proceed.
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel layout="block" styleClass="slds-align_absolute-center slds-m-top_small">
                                                                    <apex:commandButton status="assign-action-status" styleClass="btns slds-button slds-button_brand" rerender="paymentProcessorsSection, authErrors" action="{!saveBraintreeCredentials}" value="Connect with Braintree" onclick="createRemoteSiteMetadata('Braintree_Production', 'https://payments.braintree-api.com');">
                                                                        <apex:param value="true" assignTo="{!isBraintreeProduction}"/>
                                                                    </apex:commandButton>
                                                                    <apex:outputPanel style="padding-left:10px">
                                                                        <apex:commandButton status="assign-action-status" styleClass="btns slds-button slds-button_brand" value="Connect with Braintree Sandbox" rerender="paymentProcessorsSection, authErrors, messageModalPanel" action="{!saveBraintreeCredentials}" onclick="createRemoteSiteMetadata('Braintree_Sandbox', 'https://payments.sandbox.braintree-api.com');" oncomplete="{!if(isBraintreeConnected, 'showmsgPannel();', '')}">
                                                                        <apex:param value="false" assignTo="{!isBraintreeProduction}"/>
                                                                        </apex:commandButton>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                            <!-- For Squre -->
                                                            <apex:outputPanel layout="block" style="color: gray" styleClass="slds-m-top_small" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'square')}">
                                                                <!--Square integration is on our roadmap. Please&nbsp;<apex:outputLink onclick="OpenContactSupportTab();loadIframesfun('Contact_SupportPage','{!BW_SupportPortalURL}/customer/portal/emails/new?t=711718');" value="javascript:void(0);" id="ContactSupportForSquareIntegration" styleClass="GrayLinks">contact Breadwinner Support</apex:outputLink>                                                                                                
                                                                for more information.-->
                                                                <apex:outputPanel id="sqaureRemoteSiteError" >
                                                                    <apex:outputPanel layout="block"  style="font-weight:Bold;font-style: italic;margin-top: 12px; text-align: center;" rendered="{!IF((AND(selectedProcessorType == 'square',unableToAddRemoteSiteSetting)), true, false)}">
                                                                        Breadwinner is unable to read your Remote Site Settings. Please create the Remote Site Settings manually with the help of <a href="https://help-payments.breadwinner.com/support/solutions/articles/44001952121-create-remote-sites-in-breadwinner-payments" target="_blank"> this article</a>. 
                                                                        If already added, please ignore and proceed.
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel layout="block" styleClass="slds-m-top_medium" style="text-align: center" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'square')}" >
                                                                        <apex:outputLink value="{!squareAuthUrl}" target="_top" style="font-size: medium;font-weight: bold;color: rgb(0, 109, 204);" onclick="createRemoteSiteMetadata('Square_Production', 'https://connect.squareup.com');">
                                                                        Connect with Square
                                                                        </apex:outputLink>
                                                                    <apex:outputPanel style="padding-left:10px">
                                                                        <apex:outputLink value="{!SquareTestAuthUrl}" target="_top" styleClass="slds-text-body_small" onclick="createRemoteSiteMetadata('Square_Sandbox', 'https://connect.squareupsandbox.com');">Connect with Square Sandbox</apex:outputLink>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel layout="block" style="color: gray" styleClass="slds-m-top_small" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'paypal')}">
                                                              <apex:outputPanel layout="block" styleClass="slds-m-top_medium" style="text-align: center" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'paypal')}" >
                                                                    <apex:outputLink value="{!PayPalAuthUrl}" target="_top" style="font-size: medium;font-weight: bold;color: rgb(0, 109, 204);" onclick="createRemoteSiteMetadata('PayPal_Production', 'https://api.paypal.com');">
                                                                        <apex:image url="{!URLFOR($Resource.Breadwinner_Payments,'Breadwinner_Payments/images/PayPalLogo.png')}"  />
                                                                    </apex:outputLink>
                                                                    <apex:outputPanel style="padding-left:10px">
                                                                        <apex:outputLink value="{!PayPalTestAuthUrl}" target="_top" styleClass="slds-text-body_small" onclick="createRemoteSiteMetadata('PayPal_Sandbox', 'https://api.sandbox.paypal.com');">Connect with PayPal Sandbox</apex:outputLink>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel layout="block" style="color: gray" styleClass="slds-m-top_small" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'authorize.net')}">
                                                                <apex:outputPanel layout="block" styleClass="slds-m-top_medium" style="text-align: center" rendered="{!AND(isBreadwinnerAdministrator, selectedProcessorType == 'authorize.net')}" >
                                                                    <apex:outputPanel style="padding-left:10px">
                                                                        <apex:outputText styleClass="slds-text-body_small">Connect with Authorize.Net Live(coming soon)</apex:outputText>
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel style="padding-left:10px">
                                                                        <apex:outputLink value="{!AuthorizeNetTestAuthUrl}" target="_top" styleClass="slds-text-body_small" onclick="createRemoteSiteMetadata('AuthNetTest_Token', 'https://accesstest.authorize.net');createRemoteSiteMetadata('AuthNetTest_Api', 'https://apitest.authorize.net');">Connect with Authorize.Net Sandbox</apex:outputLink>
                                                                    </apex:outputPanel>
                                                                </apex:outputPanel>
                                                            </apex:outputPanel>
                                                        </apex:outputPanel>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-backdrop" id="backdrop"></div>
                                    </apex:outputPanel>
                                    <!-- End of Modal -->
                                    <!-- Adding SLDS Modal for popup box -->
                                    <div>
                                        <div class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog" id="disconnectmodal">
                                            <div class="slds-modal__container">
                                                <apex:outputPanel id="disconnectModalSection">
                                                <div class="slds-modal__header">
                                                    <h2 class="slds-text-heading_medium">Disconnect {!disconnectPaymentProcessorType} Account</h2>
                                                </div>
                                                <div class="slds-modal__content slds-p-around_medium">
                                                    <div>Clicking disconnect would only delete the connection with this {!disconnectPaymentProcessorType} account. Do you really want to disconnect this {!disconnectPaymentProcessorType} account?</div>
                                                    <div align="right" style="margin-top: 1rem;">
                                                        <apex:commandbutton id="okaybutton" styleClass="btns slds-button slds-button_brand" value="OK" action="{!disconnect}" style="width:70px;">
                                                            
                                                        </apex:commandbutton>
                                                        <apex:commandbutton id="cancelbutton" styleClass="btns slds-button slds-button_neutral slds-m-left_xx-small" value="Cancel" onclick="closeModal('disconnectmodal','backdrop');" reRender="nothing" style="width:70px;" />
                                                    </div>
                                                </div>
                                            </apex:outputPanel>
                                            </div>
                                        </div>
                                        <div class="slds-backdrop" id="backdrop"></div>
                                    </div>
                                    <!-- End of Modal -->

                                    <!--------------------------- Configuration section start -------------------------->
                                    <div id="SetupAndConfig-TAB2" class="slds-hide" aria-labelledby="customersConfiguration">
                                        <!-- -------------------------- BWP Customers Configuration Tab header start -------------------------- -->
                                        <div class="slds-page-header slds-m-bottom_medium" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <span class="slds-icon_container slds-icon-custom-custom3" title="Customers Configuration">
                                                        <svg aria-hidden="true" class="slds-icon">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom19')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Customers Configuration">Customer Configuration</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- -------------------------- BWP Customers Configuration Tab header end -------------------------- -->
                                        <!-- -------------------------- BWP Customers Configuration content start --------------------------- -->
                                        <apex:outputPanel layout="block" styleClass="slds-m-horizontal_small">
                                            <apex:pageMessages id="pgMsg"/>
                                        </apex:outputPanel>
                                        <apex:outputpanel id="multiProcessorcustomerConfig">
                                                <div class="slds-tabs_default slds-m-bottom_small" >
                                                    <ul class="slds-tabs_default__nav" role="tablist">
                                                        <apex:variable value="{!2}" var="i">
                                                            <apex:repeat value="{!appConfigList}" var="a">                           
                                                                <li class="slds-tabs_default__item slds-text-heading_label slds-truncate" title="{!a.AccountName}" role="presentation" style="display:{!IF(i<=3,'block','none')}" id="ConnectingAppName" >
                                                                    <a class="slds-tabs_default__link " href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="{!a.accountId}" id="{!a.accountId}__item"  onclick="TroubleshootselectTab(this,'{!JSENCODE(a.accountId)}',null);">
                                                                        {!a.accountName} 
                                                                    </a>
                                                                </li> 
                                                                <apex:variable value="{!i+1}" var="i"/>
                                                            </apex:repeat>
                                                        </apex:variable> 
                                                        <li class="slds-dropdown-trigger_click slds-tabs_default__item slds-tabs__item_overflow slds-text-title_caps" 
                                                            title="Other Orgs" role="presentation"  style="display:{!IF((appConfigList.size>2),'block','none')}" onclick="selectTaboverflow(this,null,null);"   id="dropdown" >
                                                            <a class="slds-tabs_default__link" href="javascript:void(0);" aria-haspopup="true" id="dropdown">
                                                                <span id='dropdown'>More
                                                                    <span class="slds-assistive-text">tabs</span>
                                                                </span>
                                                                <svg id="dropdown" aria-hidden="true" class="slds-button__icon slds-button__icon_x-small">
                                                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#down')}"></use>
                                                                </svg>
                                                            </a>
                                                            <div class="slds-dropdown slds-dropdown_right" id="droping">
                                                                <ul class="slds-dropdown__list slds-dropdown_length-with-icon-2" role="menu" style="border:red;">                                     
                                                                    <apex:variable value="{!2}" var="i">
                                                                        <apex:repeat value="{!appConfigList}" var="a"> 
                                                                            <li class="slds-dropdown__item" role="presentation" title="{!a.accountName}"  id="dropdownitem">
                                                                                <a class="slds-tabs_default__link " href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="tab-default-2" id="tab-default-2__item" style="display:{!IF(i>3,'block','none')}" onclick="TroubleshootselectTab(this,'{!JSENCODE(a.accountId)}','overflow');">
                                                                                    {!a.accountName}
                                                                                </a>
                                                                            </li>
                                                                            <apex:variable value="{!i+1}" var="i"/>
                                                                        </apex:repeat>
                                                                    </apex:variable>
                                                                </ul>                                                                     
                                                            </div>
                                                        </li>
                                                    </ul>
                                                </div>
                                        </apex:outputpanel>
                                        
                                        <apex:outputPanel id="customersConfigSection">
                                            <div class="slds-m-horizontal_small slds-m-top_medium slds-m-bottom_medium">
                                                <apex:outputPanel id="customerSyncConfigSection">
                                                    <div class="slds-section-title_divider slds-m-top_medium"> CUSTOMERS SYNC SETTINGS</div>
                                                    <div class="slds-m-left_small slds-m-vertical_small slds-text-color_weak">By default, Breadwinner will not sync Customers (and their related Payment Methods and Payments) who do not have both Name and Email address. 
                                                    </div>
                                                    <div class="slds-m-left_small slds-m-vertical_small slds-text-color_weak">
                                                        If you would like to override this default sync setting, please choose an option below:
                                                    </div>
                                                    <!--div class="slds-form-element__control slds-m-left_small">
                                                        <span class="slds-checkbox">
                                                            <label class="slds-checkbox__label" >
                                                                <apex:inputCheckbox value="{!excludeCustomersWithNoName}" id="excludeCustomerWithNoName"/>
                                                                <span class="slds-checkbox_faux"></span>
                                                                <span class="slds-form-element__label slds-m-left_small">Exclude Customers without Name (Customers without Name will not be imported to Salesforce)</span>
                                                            </label>
                                                        </span>
                                                        <span class="slds-checkbox">
                                                            <label class="slds-checkbox__label" >
                                                                <apex:inputCheckbox value="{!excludeCustomersWithNoEmail}" id="excludeCustomerWithNoEmail"/>
                                                                <span class="slds-checkbox_faux"></span>
                                                                <span class="slds-form-element__label slds-m-left_small">Exclude Customers without Email (Customers without Email will not be imported to Salesforce)</span>
                                                            </label>
                                                        </span>
                                                    </div--> 
                                                    <fieldset class="slds-form-element slds-m-left_medium">
                                                        <div class="slds-form-element__control">
                                                            <span class="slds-radio">
                                                                <input type="radio" id="NONAME_AND_NOEMAIL" value="{!appC.customerSyncConfig}" name="customerSyncConfig" onclick="CustomerSyncConfig('NONAME_AND_NOEMAIL');" />
                                                                <label class="slds-radio__label" for="NONAME_AND_NOEMAIL">
                                                                    <span class="slds-radio_faux"></span>
                                                                    <span class="slds-form-element__label">Exclude Customers with no Email address and no Name <b>(default)</b></span>
                                                                </label>                                                                    
                                                            </span>
                                                            <span class="slds-radio">
                                                                <input type="radio" id="NO_NAME" name="customerSyncConfig" onclick="CustomerSyncConfig('NO_NAME');" />
                                                                <label class="slds-radio__label" for="NO_NAME">
                                                                    <span class="slds-radio_faux"></span>
                                                                    <span class="slds-form-element__label">Exclude Customers with no Name (but have an Email address)</span>
                                                                </label>                                                                    
                                                            </span>
                                                            <span class="slds-radio">
                                                                <input type="radio" id="NO_EMAIL" value="{!appC.customerSyncConfig}" name="customerSyncConfig" onclick="CustomerSyncConfig('NO_EMAIL');" />
                                                                <label class="slds-radio__label" for="NO_EMAIL">
                                                                    <span class="slds-radio_faux"></span>
                                                                    <span class="slds-form-element__label">Exclude Customers with no Email address (but have a Name)</span>
                                                                </label>                                                                    
                                                            </span>
                                                            <span class="slds-radio">
                                                                <input type="radio" id="NONE" name="customerSyncConfig" onclick="CustomerSyncConfig('NONE')"/>
                                                                <label class="slds-radio__label" for="NONE">
                                                                    <span class="slds-radio_faux"></span>
                                                                    <span class="slds-form-element__label">Import all Customers</span>
                                                                </label>                                                                    
                                                            </span>
                                                        </div>
                                                    </fieldset>
                                                    <script>
                                                        document.getElementById('{!appC.CustomerSyncConfig}').checked = true;
                                                        function CustomerSyncConfig(inputvalue){
                                                            document.getElementById('{!JSENCODE($Component.form.customerSyncConfigValue)}').value = inputvalue;
                                                        }
                                                    </script>
                                                </apex:outputPanel>
                                                <apex:outputPanel id="customerMatchConfigSection">
                                                    <div class="slds-section-title_divider slds-m-top_medium"> CUSTOMERS MATCH SETTINGS</div>
                                                    <div class="slds-m-left_small slds-m-vertical_small slds-text-color_weak">
                                                        By default, Breadwinner will only show Customers in Account or Contact Match when they have recorded a successful Payment. 
                                                    </div>
                                                    <div class="slds-m-left_small slds-m-vertical_small slds-text-color_weak">
                                                        Breadwinner will import all customers, but not their related failed payments to Salesforce; these will not appear in the Account or Contact Match. 
                                                    </div>
                                                    <div class="slds-form-element__control slds-m-left_small">
                                                        <span class="slds-checkbox">
                                                            <label class="slds-checkbox__label" >
                                                                <apex:inputCheckbox value="{!excludeNoValidPaymentsCustomersInAccMatch}" id="excludeNoValidPaymentsCustomersInAccountMatch"/>
                                                                <span class="slds-checkbox_faux"></span>
                                                                <span class="slds-form-element__label slds-m-left_small">Only show Customers in Account or Contact Match that have had successful payments
                                                                    <!--Do not show the Customers in Account or Contact match that has no successful Payments--></span>
                                                            </label>
                                                        </span>
                                                    </div>
                                                </apex:outputPanel>
                                                <apex:outputPanel id="customerConfigSectionButton">
                                                    <div class="slds-m-top_large" align="center">
                                                        <apex:commandButton styleClass="slds-button slds-button_brand" action="{!saveCustomerConfigurationValues}" status="assign-action-status" value="Save" disabled="{!NOT(isBreadwinnerAdministrator)}" reRender="pgMsg" oncomplete="HideStyleSheet();message();"/>
                                                    </div>
                                                </apex:outputPanel>
                                            </div>
                                        </apex:outputPanel>
                                        <apex:actionFunction name="changeValue" action="{!OrgWideRecordsCount}" reRender="processorWideConnection" status="assign-action-status" oncomplete="message();">
                                            <apex:param name="accountID" value="" assignTo="{!processorAccountId}"/>
                                        </apex:actionFunction>
                                        <apex:actionFunction name="changeAccountValue" action="{!customerConfigValues}" reRender="customersConfigSection, pgMsg" status="assign-action-status" oncomplete="message();">
                                            <apex:param name="accountID" value="" assignTo="{!processorAccountId}"/>
                                        </apex:actionFunction>
                                        <!-- -------------------- BWP Customers Configuration content start ---------------------------------- -->
                                    </div>
                                    <!--------------------------- Configuration section end -------------------------->
                                    <div id="ADMIN-3" class="slds-hide" role="tabpanel" aria-labelledby="Permissions">
                                        <!-- -------------------------- Permissions Tab header start -------------------------- -->
                                        <div class="slds-page-header slds-m-bottom_medium" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <span class="slds-icon_container slds-icon_container_circle slds-icon-standard-user" title="Breadwinner Permissions">
                                                        <svg aria-hidden="true" class="slds-icon slds-icon_small">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#user')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Breadwinner Permissions">Breadwinner Permissions</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- -------------------------- Permissions Tab header start -------------------------- -->
                                        
                                        <div class="slds-tabs_default">
                                            <ul class="slds-tabs_default__nav" role="tablist">
                                                <li class="slds-tabs_default__item slds-is-active" title="Overview" role="presentation">
                                                    <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Overview','Name','ASC');" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="overview" id="overview__item">Overview</a>
                                                </li>
                                                <li class="slds-tabs_default__item slds-is-active" title="Admin" role="presentation">
                                                    <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Payments_Admin_User','Name','ASC','Name','ASC');" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="admin" id="admin__item">Admin</a>
                                                </li>
                                                <li class="slds-tabs_default__item" title="Operations" role="presentation">
                                                    <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Payments_Operations','Name','ASC');" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="operations" id="operations__item">Operations</a>
                                                </li>
                                                <li class="slds-tabs_default__item" title="Standard" role="presentation">
                                                    <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Payments_Standard_User','Name','ASC');" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="standard" id="standard__item">Standard</a>
                                                </li>
                                                <li class="slds-tabs_default__item" title="Read-Only" role="presentation">
                                                    <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('Breadwinner_Payments_Read_Only','Name','ASC');" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="readonly" id="readonly__item">Read-Only</a>
                                                </li>
                                                <li class="slds-tabs_default__item" title="All Permission Sets" role="presentation">
                                                    <a class="slds-tabs_default__link" onclick="permissionSetSelectTab(this);queryPSAssignedUsers('All_Permission_Sets');" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="all ps" id="all_ps__item">All Permission Sets</a>
                                                </li>
                                            </ul>
                                            <apex:outputPanel id="psWholeBlock" layout="block" styleClass="slds-m-around_medium">
                                                <apex:outputPanel rendered="{!selectedPermissionSet=='Overview'}">
                                                    <p>Breadwinner provides four Permission Sets, for the four broad use cases your users might need.</p><br/>
                                                    <p>Users with the <b>Breadwinner Payments Read Only Permission Set</b> can only view Breadwinner Data. 
                                                        This will also allow a user to run reports on Breadwinner data, or to see all Customers and Payments from the various tabs. 
                                                        These users can also file Support cases in the Breadwinner Payments tab, or view Knowledge Base Articles.</p><br/>
                                                    <p>The <b>Breadwinner Payments Standard User Permission Set</b> can see all data (just like <i>Read Only</i>) and also allows the creation of Payments and Customers, 
                                                        and the editing of Customers.</p><br/>
                                                    <p>The <b>Breadwinner Payments Operations Permission Set</b> is designed for power-users or finance team members. 
                                                        Users with this Permission Set can do everything included with <i>Standard</i>, and can also Match Customers to Salesforce Accounts.<!--run Batch Invoices, Match Xero Contacts to Salesforce Accounts, Import Inventory Items as Salesforce Products, and run the Address Sync. 
                                                        Users can also change which Salesforce Account a Xero Contact is associated with, or change whether that Xero Contact syncs Invoices or not.--></p><br/>
                                                    <p>Finally, the <b>Breadwinner Payments Admin Permission Set</b> can perform all functions in Breadwinner, including connecting to and disconnecting from Payment Processors (Stripe, Braintree, Square), and setting the configuration of Breadwinner.</p><br/>
                                                    <p>Please be aware that any Salesforce User with the "Modify All Data" in their Salesforce Profile is treated as if they have the <i>Admin</i> Permission Set. 
                                                        And, please be aware that if at the time of installation, Breadwinner was set to be available for "All Users" then all users will effectively have the <i>Standard</i> Permission Set unless their Profiles are additionally restricted on an object level.</p><br/>
                                                    <p>You can clone these Permission Sets to further modify them, but any custom Permission Sets will not be visible from this page. You will need to access those Permission Sets from Salesforce Setup.</p>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Payments_Admin_User'}">
                                                    <p>The following users have the Breadwinner Payments Admin Permission Set. This allows for all activities in Breadwinner. Additionally, users with the Breadwinner Payments Admin Permission Set are the only ones who can</p>
                                                    <svg aria-hidden="true" class="slds-icon">
                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom17')}"></use>
                                                    </svg>
                                                    <br/>
                                                    <ul class="slds-list_dotted">
                                                        <li>Connect and Disconnect to Payment Processor</li>
                                                        <li>Control the toggle for Read-Only-Mode / Active-Mode</li>
                                                        <li>Edit the Configuration Menu</li>
                                                        <li>Access and use the Troubleshoot Menu</li>
                                                        <li>View the Permissions tab</li>
                                                    </ul><br/>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Payments_Operations'}">
                                                    <p>The following users have the Breadwinner Payments Operations Permission Set. Users with this Permission Set (or a higher Permission Set, such as the Admin Permission Set) can</p>
                                                    <br/>
                                                    <ul class="slds-list_dotted">
                                                        <li>Run the {!customerMatchType} Match</li>
                                                        <!--li>Import Inventory</li>
                                                        <li>Run Address Sync</li>
                                                        <li>Run Batch Invoicing</li>
                                                        <li>Control the Sync Status of a Xero Customer</li-->
                                                        <li>View <!--(read-only) the Configuration, !-->Troubleshoot, and Permissions Menu</li>
                                                    </ul><br/>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Payments_Standard_User'}">
                                                    <p>The following users have the Breadwinner Payments Standard User Permission Set. Users with this Permission Set (or a higher Permission Set, such as the Admin or Operations Permission Set) can</p>
                                                    <br/>
                                                    <ul class="slds-list_dotted">
                                                        <li>Create Payments<!--span style="display:{!IF(AND(isAccountsPayableEnabled, !isFreePlan), '','None')}">, Bills or Purchase Orders</span--></li>
                                                        <li>Create Payment Methods</li>
                                                        <li>Create Customers</li>
                                                        <li>Edit Customers</li>
                                                        <!--li>Reparent Xero Contacts</li-->
                                                    </ul><br/>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!selectedPermissionSet=='Breadwinner_Payments_Read_Only'}">
                                                    <p>The following users have the Breadwinner Payments Read-Only Permission Set. Users with this Permission Set (or a higher Permission Set, such as the Admin, Operations, or Standard Permission Set) can</p>
                                                    <br/>
                                                    <ul class="slds-list_dotted">
                                                        <li>View all Payment Processor data in Salesforce (though this can be further restricted through Profiles)</li>
                                                        <li>Access the Breadwinner Payments Tab and use the Learn Menu section for the Knowledge Base or to file a Support Request</li>
                                                        <!--li>Download Invoice or Send Invoice PDF as Email</li>
                                                        <li>Use the Invoice Collection tool</li-->
                                                    </ul><br/>
                                                </apex:outputPanel>
                                                <apex:dataTable value="{!wrapPermissionUsersList}" var="psUsers" styleclass="slds-table slds-no-row-hover slds-table_bordered slds-border_right slds-border_left slds-table_col-bordered topborder" rendered="{!AND(wrapPermissionUsersList.size>0,selectedPermissionSet!='Overview')}">
                                                    <apex:column value="{!psUsers.fullName}">
                                                        <apex:facet name="header">
                                                            <apex:commandLink styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Full Name"  status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.nameColumnUp');reRenderArrowDownSVG('.nameColumnDown');reRenderArrowUpSVG('.nameColumnUp1');reRenderArrowDownSVG('.nameColumnDown1');reRenderArrowUpSVG('.unameColumnUp1');reRenderArrowDownSVG('.unameColumnDown1');reRenderArrowUpSVG('.profileColumnUp1');reRenderArrowDownSVG('.profileColumnDown1');HideStyleSheet();message();">
                                                                <apex:outputPanel id="nameArrowDown" styleClass="nameColumnDown" rendered="{!AND(sortExpression='Name', sortDirection!='ASC')}">
                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                    </svg>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel id="nameArrowUP" styleClass="nameColumnUp" rendered="{!AND(sortExpression='Name', sortDirection='ASC')}">
                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                                    </svg>
                                                                </apex:outputPanel>
                                                                <apex:param value="Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                                                                <apex:param value="{!IF(sortDirection == 'ASC','DESC','ASC')}" name="dir" assignTo="{!sortDirection}"></apex:param>
                                                                <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                            </apex:commandLink>
                                                        </apex:facet>
                                                    </apex:column>
                                                    <apex:column value="{!psUsers.userName}">
                                                        <apex:facet name="header">
                                                            <apex:commandLink id="unameColumn" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Username"  status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.unameColumnUp');reRenderArrowDownSVG('.unameColumnDown');reRenderArrowUpSVG('.nameColumnUp1');reRenderArrowDownSVG('.nameColumnDown1');reRenderArrowUpSVG('.unameColumnUp1');reRenderArrowDownSVG('.unameColumnDown1');reRenderArrowUpSVG('.profileColumnUp1');reRenderArrowDownSVG('.profileColumnDown1');HideStyleSheet();message();">
                                                                <apex:outputPanel id="unameArrowDown" styleClass="unameColumnDown" rendered="{!AND(sortExpression='Username', sortDirection!='ASC')}">
                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                    </svg>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel id="unameArrowUP" styleClass="unameColumnUp" rendered="{!AND(sortExpression='Username', sortDirection='ASC')}">
                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                                    </svg>
                                                                </apex:outputPanel>
                                                                <apex:param value="Username" name="column" assignTo="{!sortExpression}" ></apex:param>
                                                                <apex:param value="{!IF(sortDirection == 'ASC','DESC','ASC')}" name="dir" assignTo="{!sortDirection}"></apex:param>
                                                                <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                            </apex:commandLink>
                                                        </apex:facet>
                                                    </apex:column>
                                                    <apex:column headerValue="Profile" html-data-label="Profile" value="{!psUsers.profileName}">
                                                        <apex:facet name="header">
                                                            <apex:commandLink id="profileColumn" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Profile"  status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.profileColumnUp');reRenderArrowDownSVG('.profileColumnDown');reRenderArrowUpSVG('.nameColumnUp1');reRenderArrowDownSVG('.nameColumnDown1');reRenderArrowUpSVG('.unameColumnUp1');reRenderArrowDownSVG('.unameColumnDown1');reRenderArrowUpSVG('.profileColumnUp1');reRenderArrowDownSVG('.profileColumnDown1');HideStyleSheet();message();">
                                                                <apex:outputPanel id="profileArrowDown" styleClass="profileColumnDown" rendered="{!AND(sortExpression='Profile.Name', sortDirection!='ASC')}">
                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                    </svg>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel id="profileArrowUP" styleClass="profileColumnUp" rendered="{!AND(sortExpression='Profile.Name', sortDirection='ASC')}">
                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                                    </svg>
                                                                </apex:outputPanel>
                                                                <apex:param value="Profile.Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                                                                <apex:param value="{!IF(sortDirection == 'ASC','DESC','ASC')}" name="dir" assignTo="{!sortDirection}"></apex:param>
                                                                <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                            </apex:commandLink>
                                                        </apex:facet>
                                                    </apex:column>
                                                    <apex:column headerValue="Admin" html-data-label="Admin" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                                        <apex:inputCheckbox disabled="true" value="{!psUsers.adminSelected}"/>
                                                    </apex:column>
                                                    <apex:column headerValue="Operations" html-data-label="Operations" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                                        <apex:inputCheckbox disabled="true" value="{!psUsers.operationsSelected}"/>
                                                    </apex:column>
                                                    <apex:column headerValue="Standard" html-data-label="Standard" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                                        <apex:inputCheckbox disabled="true" value="{!psUsers.standardSelected}"/>
                                                    </apex:column>
                                                    <apex:column headerValue="Read-Only" html-data-label="Read-Only" rendered="{!selectedPermissionSet=='All_Permission_Sets'}">
                                                        <apex:inputCheckbox disabled="true" value="{!psUsers.readOnlySelected}"/>
                                                    </apex:column>
                                                </apex:dataTable>

                                                <apex:outputPanel layout="block" styleClass="slds-m-top_medium slds-m-horizontal_medium" rendered="{!AND(selectedPermissionSet=='All_Permission_Sets', assignedPermissionSetUsers.size<=0)}">
                                                    <div class="slds-align_absolute-center slds-border_top slds-border_bottom slds-p-top_small slds-p-bottom_small">
                                                        No Users have Breadwinner Permission Sets assigned.
                                                    </div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel rendered="{!AND(selectedPermissionSet!='',BEGINS(selectedPermissionSet,'Breadwinner_'))}">                                                    
                                                    <apex:outputPanel layout="block" rendered="{!assignedPermissionSetUsers.size<=0}" styleClass="slds-m-top_medium slds-m-horizontal_medium">
                                                        <div class="slds-align_absolute-center slds-border_top slds-border_bottom slds-p-top_small slds-p-bottom_small">
                                                            No Users have this Permission Set assigned.
                                                        </div>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!assignedPermissionSetUsers.size == 10}">
                                                        <p style="margin-top:8px;margin-left:3px;color:grey;">
                                                        * Only the first 10 Users are displayed. To see all users, please visit the Salesforce Permission Set for&nbsp;<apex:outputText value="{!SUBSTITUTE(selectedPermissionSet,'_',' ')}"/>.
                                                        </p>
                                                    </apex:outputPanel><br/>
                                                    <apex:outputPanel rendered="{!OR(isAdministrator, canAssignPermissionSets)}">
                                                        You can&nbsp;<apex:outputLink rendered="{!NOT(isLightning)}" value="/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank">Add this Permission Set to a User</apex:outputLink>
                                                        <apex:outputLink rendered="{!isLightning}" value="/lightning/setup/PermSets/page?address=/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank">Add this Permission Set to a User</apex:outputLink><span style="display:{!IF((assignedPermissionSetUsers.size>0), '','None')}">,</span>
                                                        <apex:outputPanel rendered="{!assignedPermissionSetUsers.size>0}">
                                                            or&nbsp;<apex:outputLink rendered="{!NOT(isLightning)}" value="/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank">Remove this Permission Set from a User</apex:outputLink>
                                                            <apex:outputLink rendered="{!isLightning}" value="/lightning/setup/PermSets/page?address=/005?id={!selectedPermissionSetId}&ispsg=0&isUserEntityOverride=1" target="_blank">Remove this Permission Set from a User</apex:outputLink>
                                                        </apex:outputPanel>.
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel layout="block" styleClass="slds-m-top_medium" rendered="{!AND(usersWithModifyAllDataPermission.size>0, selectedPermissionSet=='Breadwinner_Payments_Admin_User')}">
                                                    <div class="slds-panel__section slds-p-around_none">
                                                        <div class="slds-section slds-is-open">
                                                            <h3 class="slds-section__title slds-theme_shade">
                                                                <span class="slds-truncate slds-p-horizontal_xx-small">Salesforce Users with Modify All Permission Settings</span>
                                                            </h3>
                                                            <div class="slds-section__content">
                                                                <p>While these users do not have a Breadwinner Permission Set, they have the permission to do everything, just like someone with a Breadwinner Payments Admin Permission Set.</p>
                                                                <apex:dataTable value="{!usersWithModifyAllDataPermission}" var="psUsers" styleclass="slds-table slds-no-row-hover slds-table_bordered slds-border_right slds-border_left slds-table_col-bordered slds-m-top_small topborder">
                                                                    <apex:column headerValue="Full Name" html-data-label="Full Name" value="{!psUsers.Name}" >
                                                                        <apex:facet name="header">
                                                                            <apex:commandLink styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Full Name"  status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.nameColumnUp1');reRenderArrowDownSVG('.nameColumnDown1');reRenderArrowUpSVG('.nameColumnUp');reRenderArrowDownSVG('.nameColumnDown');reRenderArrowUpSVG('.unameColumnUp');reRenderArrowDownSVG('.unameColumnDown');reRenderArrowUpSVG('.profileColumnUp');reRenderArrowDownSVG('.profileColumnDown');HideStyleSheet();message();">
                                                                                <apex:outputPanel id="nameArrowDown1" styleClass="nameColumnDown1" rendered="{!AND(modifyAllDataSortExpression='Name', modifyAllDataSortDirection!='ASC')}">
                                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                                    </svg>
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="nameArrowUP1" styleClass="nameColumnUp1" rendered="{!AND(modifyAllDataSortExpression='Name', modifyAllDataSortDirection='ASC')}">
                                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                                                    </svg>
                                                                                </apex:outputPanel>
                                                                                <apex:param value="Name" name="column" assignTo="{!modifyAllDataSortExpression}" ></apex:param>
                                                                                <apex:param value="{!IF(modifyAllDataSortDirection == 'ASC','DESC','ASC')}" name="dir" assignTo="{!modifyAllDataSortDirection}"></apex:param>
                                                                                <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                                            </apex:commandLink>
                                                                        </apex:facet>
                                                                    </apex:column>
                                                                    <apex:column headerValue="Username" html-data-label="Username" value="{!psUsers.Username}" >
                                                                        <apex:facet name="header">
                                                                            <apex:commandLink id="unameColumn1" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Username"  status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.unameColumnUp1');reRenderArrowDownSVG('.unameColumnDown1');reRenderArrowUpSVG('.nameColumnUp');reRenderArrowDownSVG('.nameColumnDown');reRenderArrowUpSVG('.unameColumnUp');reRenderArrowDownSVG('.unameColumnDown');reRenderArrowUpSVG('.profileColumnUp');reRenderArrowDownSVG('.profileColumnDown');HideStyleSheet();message();">
                                                                                <apex:outputPanel id="unameArrowDown1" styleClass="unameColumnDown1" rendered="{!AND(modifyAllDataSortExpression='Username', modifyAllDataSortDirection!='ASC')}">
                                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                                    </svg>
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="unameArrowUP1" styleClass="unameColumnUp1" rendered="{!AND(modifyAllDataSortExpression='Username', modifyAllDataSortDirection='ASC')}">
                                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                                                    </svg>
                                                                                </apex:outputPanel>
                                                                                <apex:param value="Username" name="column" assignTo="{!modifyAllDataSortExpression}" ></apex:param>
                                                                                <apex:param value="{!IF(modifyAllDataSortDirection == 'ASC','DESC','ASC')}" name="dir" assignTo="{!modifyAllDataSortDirection}"></apex:param>
                                                                                <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                                            </apex:commandLink>
                                                                        </apex:facet>
                                                                    </apex:column>
                                                                    <apex:column headerValue="Profile" html-data-label="Profile" value="{!psUsers.Profile.Name}" >
                                                                        <apex:facet name="header">
                                                                            <apex:commandLink id="profileColumn1" styleClass="sortlink" action="{!queryPermissionSetAssignedUsers}" value="Profile"  status="assign-action-status" reRender="psWholeBlock" oncomplete="reRenderArrowUpSVG('.profileColumnUp1');reRenderArrowDownSVG('.profileColumnDown1');reRenderArrowUpSVG('.nameColumnUp');reRenderArrowDownSVG('.nameColumnDown');reRenderArrowUpSVG('.unameColumnUp');reRenderArrowDownSVG('.unameColumnDown');reRenderArrowUpSVG('.profileColumnUp');reRenderArrowDownSVG('.profileColumnDown');HideStyleSheet();message();">
                                                                                <apex:outputPanel id="profileArrowDown1" styleClass="profileColumnDown1" rendered="{!AND(modifyAllDataSortExpression='Profile.Name', modifyAllDataSortDirection!='ASC')}">
                                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
                                                                                    </svg>
                                                                                </apex:outputPanel>
                                                                                <apex:outputPanel id="profileArrowUP1" styleClass="profileColumnUp1" rendered="{!AND(modifyAllDataSortExpression='Profile.Name', modifyAllDataSortDirection='ASC')}">
                                                                                    <svg aria-hidden="true" class="slds-button__icon">
                                                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
                                                                                    </svg>
                                                                                </apex:outputPanel>
                                                                                <apex:param value="Profile.Name" name="column" assignTo="{!modifyAllDataSortExpression}" ></apex:param>
                                                                                <apex:param value="{!IF(modifyAllDataSortDirection == 'ASC','DESC','ASC')}" name="dir" assignTo="{!modifyAllDataSortDirection}"></apex:param>
                                                                                <apex:param value="{!selectedPermissionSet}" assignTo="{!selectedPermissionSet}"/>
                                                                            </apex:commandLink>
                                                                        </apex:facet>
                                                                    </apex:column>
                                                                </apex:dataTable>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </div>                                        
                                    </div>
                                    <div id="SetupAndConfig-TAB3" class="slds-hide" aria-labelledby="knowledgeBase">
                                        <div class="slds-page-header slds-m-bottom_medium" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <span class="slds-icon_container" title="Contact Support">
                                                        <svg aria-hidden="true" class="slds-icon slds-icon-action-description">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#google_news')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Contact Support">Knowledge Base</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <!-------------------------------Knowledge Base page content comes here.---------------------------->
                                        <div id="KnowledgeBaseIframeDiv">
                                            
                                        </div>
                                    </div>
                                    
                                    <div id="Support-TAB1" class="slds-hide" aria-labelledby="ContactSupport">
                                        <!-------------------------------ContactSupport Tab header start ---------------------------->
                                        <div class="slds-page-header slds-m-bottom_xx-small" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <span class="slds-icon_container" title="Contact Support">
                                                        <svg aria-hidden="true" class="slds-icon slds-icon-action-description">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/action-sprite/svg/symbols.svg#email')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Contact Support">Contact Support</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- -----------------------------ContactSupport Tab header end -------------------------------->
                                        <!--------------------------------Contact Support page content comes here. ---------------------------->
                                        <div id="ContactSupportIframeDiv">
                                            
                                        </div>                                        
                                        <!-- -----------------------------ContactSupport Tab content end ---------------------------->
                                    </div>
                                    
                                    <!------------------------ Start of Troubleshooting Page ---------------------------->
                                    <div id="ADMIN-21" class="slds-hide" role="tabpanel" aria-labelledby="General-Troubleshoot">
                                        <!------------------------------Troubleshoot Base page content comes here.---------------------------->
                                        <div class="slds-page-header slds-m-bottom_medium" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <span class="slds-icon_container slds-icon-custom-custom3" title="Setup">
                                                        <svg aria-hidden="true" class="slds-icon">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom19')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Troubleshoot">Troubleshoot</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <apex:outputPanel layout="block" styleClass="slds-m-around_small" id="GeneralTroubleshootSection">
                                            <apex:outputPanel layout="block" styleClass="slds-m-bottom_medium" id="breadwinnerInfo" rendered="{!showGeneralSection}">
                                                <h3 class="slds-section-title_divider slds-m-bottom_small">Breadwinner Info</h3>
                                                <div class="slds-m-horizontal_small">
                                                    <table class="slds-table slds-no-row-hover" border="0" cellpadding="0" style="width: initial;" id="BreadwinnerInfo">
                                                        <tr>
                                                            <td class="generalTab-header">Salesforce Edition:</td>
                                                            <td class="generalTab-value"><apex:outputtext value="{!orgInfo.OrganizationType}"> </apex:outputtext></td>
                                                        </tr>
                                                        <tr>
                                                            <td class="generalTab-header">Salesforce Org Type:</td> 
                                                            <td class="generalTab-value"><apex:outputtext value="{!IF(orgInfo.IsSandbox==true, 'Sandbox', 'Production')}{!IF(orgInfo.TrialExpirationDate!= null,' - Trial','')}"></apex:outputtext></td>
                                                        </tr>
                                                        <tr> 
                                                            <td class="generalTab-header">Salesforce Org Id:</td>
                                                            <td class="generalTab-value"><apex:outputtext value="{!orgInfo.Id}"></apex:outputtext></td>
                                                        </tr>
                                                        <tr>
                                                            <td class="generalTab-header">Breadwinner Plan Code:</td>
                                                            <td class="generalTab-value"><apex:outputtext value="{!bwSetting.Plan_Code}"></apex:outputtext></td>
                                                        </tr>
                                                        <tr>
                                                            <td class="generalTab-header">Breadwinner Plan Name:</td>
                                                            <td class="generalTab-value"><apex:outputtext value="{!planName}"></apex:outputtext></td>
                                                        </tr>
                                                        <tr>
                                                            <td class="generalTab-header">Breadwinner Version:</td>
                                                            <td class="generalTab-value"><apex:outputtext value="{!pkgVersion}"></apex:outputtext></td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="block" rendered="{!isProcessorConnected && isBreadwinnerAdministrator && showGeneralSection}">
                                                <h3 class="slds-section-title_divider slds-m-bottom_small slds-m-top_medium">Scheduled Jobs Status</h3>
                                                <div class="slds-m-horizontal_xx-small">
                                                    <apex:outputPanel layout="block" styleclass="slds-m-horizontal_medium slds-m-bottom_small">
                                                        Scheduled jobs are running under
                                                        <apex:outputPanel rendered="{!AND(isScheduledJobsRunbyActiveUser,isScheduledJobsRunbyAdmin)}">
                                                            <i>an Active User</i>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel styleClass="slds-text-color_destructive" rendered="{!OR(NOT(isScheduledJobsRunbyActiveUser),NOT(isScheduledJobsRunbyAdmin))}">
                                                            <b><i>{!IF(NOT(isScheduledJobsRunbyActiveUser),'an Inactive User',IF(NOT(isScheduledJobsRunbyAdmin),'Non Administrator','an Inactive User or Non Administrator'))}</i></b>
                                                        </apex:outputPanel>
                                                        <apex:outputPanel >
                                                            <apex:commandButton value="Restart Scheduled Jobs under my Admin User" action="{!restartScheduledJobs}" status="assign-action-status" styleClass="slds-m-left_medium slds-button {!IF(OR(NOT(isScheduledJobsRunbyActiveUser),NOT(isScheduledJobsRunbyAdmin)),'slds-button_destructive','slds-button_brand')}" oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','Succesfully restarted Scheduled Jobs to run under you.');"></apex:commandButton>
                                                        </apex:outputPanel>
                                                    </apex:outputPanel>
                                                </div>
                                            
                                                <h3 class="slds-section-title_divider slds-m-bottom_small">Restarting And Updating</h3> 
                                              
                                                <apex:outputPanel layout="block" styleclass="slds-m-horizontal_medium slds-m-bottom_small">
                                                    <apex:commandButton id="restartCustomerSync" value="Restart Historical Customer / Payment Method Sync" action="{!restartHistoricalSync}" oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','{!IF(isBatchStarted,'Historical Customer / Payment Method Sync is started now.','Historical Customer / Payment Method Sync is already running. Please try again later.')}');" status="assign-action-status" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-left_xx-small slds-m-right_small" reRender="nothing" >
                                                        <apex:param value="Customer" assignTo="{!syncName}" />
                                                    </apex:commandButton>
                                                    <apex:commandButton id="restartPaymentSync" value="Restart Historical Payment Sync" action="{!restartHistoricalSync}" oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','{!IF(isBatchStarted,'Historical Payment Sync is started now.','Historical Payment Sync is already running. Please try again later.')}');" status="assign-action-status" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-left_xx-small slds-m-right_small" reRender="nothing" >
                                                        <apex:param value="Payment" assignTo="{!syncName}" />
                                                    </apex:commandButton>
                                                    <apex:commandButton id="restartHistoricalSync" value="Restart Historical Sync" action="{!restartWeeklySync}" oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','{!IF(isBatchStarted,'Historical Sync is started now.','Historical Sync is already running. Please try again later.')}');" status="assign-action-status" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-left_xx-small slds-m-right_small" reRender="nothing" >
                                                    </apex:commandButton>
                                                    <apex:commandButton id="restartHourlySync" value="Restart Hourly Sync" action="{!rescheduleHourlySync}"  oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','Hourly Sync batches will be rescheduled now.');" status="assign-action-status" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-right_x-small" reRender="nothing" />
                                                </apex:outputPanel>
                                                
                                            </apex:outputPanel>
                                            <apex:outputPanel styleClass="slds-m-bottom_small" layout="block" id="deleteSection" rendered="{!AND(isBreadwinnerAdministrator, showGeneralSection, NOT(isProcessorConnected))}">
                                                <h3 class="slds-section-title_divider slds-m-bottom_small slds-m-top_medium">Delete BWP Customers, Payment Methods and Payments</h3>
                                                <apex:outputPanel layout="block" styleclass="slds-m-horizontal_medium">
                                                    <div class="slds-text-title_caps slds-m-top_small" style="color:red;">Don&apos;t use the delete functionality unless specifically asked by Breadwinner Support.</div>
                                                    <div class="slds-text-title slds-m-top_small">Click delete to remove all Breadwinner Payments Customers, Payment Methods or Payments from Salesforce (no data in your Payment processor will be affected).</div>
                                                    <div>
                                                        <apex:commandButton id="tsDeleteCustomerBtn" value="Delete All BWP Customers ({!customersCount}) from Salesforce" oncomplete="showModal('tsModal','tsBackdrop','deleteMessage','Are you sure, you want to delete ALL ({!customersCount}) BWP Customers from Salesforce?','customer');" styleClass="slds-button slds-button_destructive  {!IF(OR($User.UIThemeDisplayed == 'Theme4d',$User.UIThemeDisplayed == 'Theme4t'),'','slds-m-top_small')} slds-m-left_xx-small slds-m-right_small" reRender="nothing" disabled="{!If(customersCount>0,FALSE,TRUE)}">
                                                            <apex:param name="deleteCustomer" value="Customers" assignTo="{!objectName}"/>
                                                        </apex:commandButton>
                                                        <apex:commandButton id="tsDeletePaymentMethodsBtn" value="Delete All BWP Payment Methods ({!paymentMethodsCount}) from Salesforce" oncomplete="showModal('tsModal','tsBackdrop','deleteMessage','Are you sure, you want to delete ALL ({!paymentMethodsCount}) BWP Payment Methods from Salesforce?','payment methods');" styleClass="slds-button slds-button_destructive slds-m-top_small slds-m-left_xx-small slds-m-right_small" reRender="nothing" disabled="{!If(paymentMethodsCount>0,FALSE,TRUE)}">
                                                            <apex:param name="deletePaymentMethods" value="PaymentMethods" assignTo="{!objectName}"/>
                                                        </apex:commandButton>
                                                        <apex:commandButton id="tsDeletePaymentBtn" value="Delete All BWP Payments ({!paymentsCount}) from Salesforce" oncomplete="showModal('tsModal','tsBackdrop','deleteMessage','Are you sure, you want to delete ALL ({!paymentsCount}) BWP Payments from Salesforce?','payment');" styleClass="slds-button slds-button_destructive slds-m-top_small slds-m-left_xx-small slds-m-right_small" reRender="nothing" disabled="{!If(paymentsCount>0,FALSE,TRUE)}">
                                                            <apex:param name="deletePayment" value="Payments" assignTo="{!objectName}"/>
                                                        </apex:commandButton>
                                                    </div>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                    </div>
                                    <div id="ADMIN-22" class="slds-hide" role="tabpanel" aria-labelledby="Connection-Troubleshoot">
                                        <div class="slds-page-header slds-m-bottom_medium" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <span class="slds-icon_container slds-icon-custom-custom3" title="Setup">
                                                        <svg aria-hidden="true" class="slds-icon">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom19')}"></use>
                                                        </svg>
                                                    </span>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Troubleshoot">Troubleshoot</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        <apex:outputPanel layout="block" id="connectionSection">
                                            <apex:outputPanel layout="block" styleClass="slds-m-around_small" rendered="{!NOT(isProcessorConnected)}">
                                                <apex:pageMessage severity="WARNING" summary="Please connect to a Payment Processor from the Setup section of Breadwinner tab."/>
                                            </apex:outputPanel>
                                            <apex:outputPanel style='display:{!if(AND(isMultiProcessorEnabled, appConfigList!=NULL, appConfigList.size>1),"block","none")}'>
                                                <div class="slds-tabs_default">
                                                    <ul class="slds-tabs_default__nav slds-m-bottom_medium slds-m-top_medium" role="tablist">
                                                        <apex:variable value="{!2}" var="i" rendered="{!IF(AND(appConfigList!=NULL, isBreadwinnerAdministrator),true,false)}">
                                                            <apex:repeat value="{!appConfigList}" var="a">
                                                                <li class="slds-tabs_default__item slds-text-heading_label slds-truncate" title="{!a.accountName}" role="presentation" style='display:{!if(i<=3,"block","none")}'>
                                                                    <a class="slds-tabs_default__link " href="javascript:void(0);" style="text-decoration: none;" role="tab" tabindex="0" aria-selected="false" aria-controls="{!a.accountId}" id="{!a.accountId}__processor" onclick="TroubleshootselectTab(this,'{!JSENCODE(a.accountId)}',null);">
                                                                        {!a.accountName}
                                                                    </a>
                                                                </li>
                                                                <apex:variable value="{!i+1}" var="i"/>
                                                            </apex:repeat>
                                                        </apex:variable>
                                                        <li class="slds-dropdown-trigger_click slds-tabs_default__item slds-tabs__item_overflow slds-text-title_caps" 
                                                            title="Other Orgs" role="presentation" style='display:{!if((isBreadwinnerAdministrator&&appConfigList!=null&&(appConfigList.size>2)),"block","none")}' onclick="selectTaboverflow(this,null,null);" id='dropdown'>
                                                            <a class="slds-tabs_default__link" href="javascript:void(0);" style="text-decoration: none;" aria-haspopup="true" id='dropdown'>
                                                                <span id='dropdown'>More
                                                                    <span class="slds-assistive-text">tabs</span>
                                                                </span>
                                                                <svg id="dropdown" aria-hidden="true" class="slds-button__icon slds-button__icon_x-small">
                                                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#down')}"></use>
                                                                </svg>
                                                            </a>
                                                            <div class="slds-dropdown slds-dropdown_right" id='droping'>                                                               
                                                                <ul class="slds-dropdown__list slds-dropdown_length-with-icon-2" role="menu">
                                                                    <apex:variable value="{!2}" var="i">
                                                                        <apex:repeat value="{!appConfigList}" var="a"> 
                                                                            <li class="slds-dropdown__item" role="presentation" title="{!a.accountName}" >
                                                                                <a class="slds-tabs_default__link " href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="{!a.accountId}" id="{!a.accountId}__processor" style='display:{!if(i>3,"block","none")};text-decoration: none;' onclick="TroubleshootselectTab(this,'{!JSENCODE(a.accountId)}','overflow');" >
                                                                                    {!a.accountName} 
                                                                                </a>
                                                                            </li>
                                                                            <apex:variable value="{!i+1}" var="i"/>
                                                                        </apex:repeat>
                                                                    </apex:variable>
                                                                </ul>                                   
                                                            </div>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="block" styleClass="slds-m-around_xx-small" id="processorWideConnection">
                                                <apex:outputPanel layout="block" rendered="{!IF((appConfigList.size>0),'true','falsle')}">
                                                    <h3 class="slds-section-title_divider slds-m-bottom_small slds-m-top_medium">{!appC.paymentProcessorType} information</h3>
                                                    <div class="slds-m-left_medium">{!appC.paymentProcessorType} Org Id: {!processorAccountId}</div>
                                                </apex:outputPanel>
                                                
                                                <apex:outputPanel layout="block" rendered="{!isProcessorConnected && isBreadwinnerAdministrator}">
                                                <h3 class="slds-section-title_divider slds-m-bottom_small slds-m-top_medium">Restarting And Updating</h3> 
                                              
                                                <apex:outputPanel layout="block" styleclass="slds-m-horizontal_medium slds-m-bottom_small">
                                                    <apex:commandButton id="restartProcessorCustomerSync" value="Restart Historical Customer / Payment Method Sync" action="{!restartHistoricalSync}" oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','{!IF(isBatchStarted,'Historical Customer / Payment Method Sync is started now.','Historical Customer / Payment Method Sync is already running. Please try again later.')}');" status="assign-action-status" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-left_xx-small slds-m-right_small" reRender="nothing" >
                                                        <apex:param value="Customer" assignTo="{!syncName}" />
                                                        <apex:param value="{!processorAccountId}" assignTo="{!syncProcessor}" />
                                                    </apex:commandButton>
                                                    <apex:commandButton id="restartProcessorPaymentSync" value="Restart Historical Payment Sync" action="{!restartHistoricalSync}" oncomplete="showModal('restartSyncModel','backdropRestart','restartModalContent','{!IF(isBatchStarted,'Historical Payment Sync is started now.','Historical Payment Sync is already running. Please try again later.')}');" status="assign-action-status" styleClass="slds-button slds-button_brand slds-m-top_x-small slds-m-left_xx-small slds-m-right_small" reRender="nothing" >
                                                        <apex:param value="Payment" assignTo="{!syncName}" />
                                                        <apex:param value="{!processorAccountId}" assignTo="{!syncProcessor}" />
                                                    </apex:commandButton>
                                                </apex:outputPanel>
                                                </apex:outputPanel>
                                                <apex:outputPanel styleClass="slds-m-bottom_small" layout="block" id="deleteSectionAppWide" rendered="{!AND(isBreadwinnerAdministrator, isProcessorConnected)}">
                                                    <h3 class="slds-section-title_divider slds-m-bottom_small slds-m-top_medium">Delete BWP Customers, Payment Methods and Payments</h3>
                                                    <apex:outputPanel layout="block" styleclass="slds-m-horizontal_medium">
                                                        <div class="slds-text-title_caps slds-m-top_small" style="color:red;">Don&apos;t use the delete functionality unless specifically asked by Breadwinner Support.</div>
                                                        <div class="slds-text-title slds-m-top_small">Click delete to remove all Breadwinner Payments Customers, Payment Methods or Payments from Salesforce (no data in your Payment processor will be affected).</div>
                                                        <div>
                                                            <apex:commandButton id="DeleteCustomerBtn" value="Delete All BWP Customers ({!customersCount}) from Salesforce" oncomplete="showModal('tsModal','tsBackdrop','deleteMessage','Are you sure, you want to delete ALL ({!customersCount}) BWP Customers from Salesforce?','customer');" styleClass="slds-button slds-button_destructive  {!IF(OR($User.UIThemeDisplayed == 'Theme4d',$User.UIThemeDisplayed == 'Theme4t'),'','slds-m-top_small')} slds-m-left_xx-small slds-m-right_small" reRender="nothing" disabled="{!If(customersCount>0,FALSE,TRUE)}">
                                                                <apex:param name="deleteCustomer" value="Customers" assignTo="{!objectName}"/>
                                                            </apex:commandButton>
                                                            <apex:commandButton id="DeletePaymentMethodsBtn" value="Delete All BWP Payment Methods ({!paymentMethodsCount}) from Salesforce" oncomplete="showModal('tsModal','tsBackdrop','deleteMessage','Are you sure, you want to delete ALL ({!paymentMethodsCount}) BWP Payment Methods from Salesforce?','payment methods');" styleClass="slds-button slds-button_destructive slds-m-top_small slds-m-left_xx-small slds-m-right_small" reRender="nothing" disabled="{!If(paymentMethodsCount>0,FALSE,TRUE)}">
                                                                <apex:param name="deletePaymentMethods" value="PaymentMethods" assignTo="{!objectName}"/>
                                                            </apex:commandButton>
                                                            <apex:commandButton id="DeletePaymentBtn" value="Delete All BWP Payments ({!paymentsCount}) from Salesforce" oncomplete="showModal('tsModal','tsBackdrop','deleteMessage','Are you sure, you want to delete ALL ({!paymentsCount}) BWP Payments from Salesforce?','payment');" styleClass="slds-button slds-button_destructive slds-m-top_small slds-m-left_xx-small slds-m-right_small" reRender="nothing" disabled="{!If(paymentsCount>0,FALSE,TRUE)}">
                                                                <apex:param name="deletePayment" value="Payments" assignTo="{!objectName}"/>
                                                            </apex:commandButton>
                                                        </div>
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                    </div>
                                    <!-- Adding SLDS Modal for popup box -->
                                    <div>
                                        <div class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog" id="restartSyncModel">
                                            <div class="slds-modal__container">
                                                <div class="slds-modal__header">
                                                    <h2 class="slds-text-heading_medium">Troubleshooting</h2>
                                                </div>
                                                <div class="slds-modal__content slds-p-around_medium">
                                                    <div id="restartModalContent"></div>
                                                    <div align="right" style="margin-top: 1rem;">  
                                                        <apex:commandbutton styleClass="btns slds-button slds-button_brand" value="OK" oncomplete="closeModal('restartSyncModel','backdropRestart');" reRender="deleteSection,deleteSectionAppWide, GeneralTroubleshootSection, processorWideConnection" style="width:70px;" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-backdrop" id="backdropRestart"></div>
                                    </div>
                                    <!-- End of Modal -->
                                    <div>
                                        <div id="tsModal" class="slds-modal slds-modal_x-small" aria-hidden="false" role="dialog">
                                            <div class="slds-modal__container">
                                                <div class="slds-modal__header">
                                                    <h2 class="slds-text-heading_medium">Troubleshooting</h2>
                                                </div>
                                                <div class="slds-modal__content slds-p-around_medium">
                                                    <p id="deleteMessage"></p>
                                                    <div align="right" class="slds-m-top_medium">
                                                        <apex:commandbutton id="tsDeleteBtn" status="assign-action-status" styleClass="btns slds-button slds-button_brand" value="OK" action="{!deleteRecords}" style="width:70px;" oncomplete="closeModal('tsModal','tsBackdrop');" reRender="deleteSection,deleteSectionAppWide"/>
                                                        <apex:commandbutton id="tsOKCancelBtn" styleClass="btns slds-button slds-button_neutral slds-m-left_xx-small" value="Cancel" onclick="closeModal('tsModal','tsBackdrop');" reRender="nothing" style="width:70px;" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-backdrop" id="tsBackdrop"></div>
                                    </div>

                                    <div id="ADMIN-23" class="slds-hide" role="tabpanel" aria-labelledby="StatusLogs">
                                        
                                        <div class="slds-page-header slds-m-bottom_medium" role="banner">
                                            <div class="slds-media slds-media_center">
                                                <div class="slds-media__figure">
                                                    <svg aria-hidden="true" class="slds-icon slds-icon-standard-opportunity">
                                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/standard-sprite/svg/symbols.svg#custom')}"></use>
                                                    </svg>
                                                </div>
                                                <div class="slds-media__body">
                                                    <p class="slds-page-header__title slds-truncate" title="Status Logs">Status Logs</p>
                                                    <p class="slds-text-body_small">Breadwinner • Payments </p>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="slds-m-horizontal_small">
                                            <div class="slds-text-color_weak">
                                                This page shows error messages and exceptions. To check logs please click on the button below.
                                            </div>
                                            <apex:commandButton styleClass="slds-m-top_medium slds-button slds-button_brand" value="Check Log for Recent Errors" onclick="drawTable();" reRender="nothingRenders" />
                                            
                                            <div id="StatusLogSpinner" style="display:none;">
                                                <div class="slds-spinner_container">
                                                    <div class="slds-spinner_brand slds-spinner slds-spinner_medium" role="alert">
                                                        <span class="slds-assistive-text">Loading</span>
                                                        <div class="slds-spinner__dot-a"></div>
                                                        <div class="slds-spinner__dot-b"></div>
                                                    </div>
                                                </div>
                                            </div>                                        
                                            
                                            <div  class="slds-m-top_medium" id="table_div"></div>
                                            <div id="message" class="slds-m-top_medium" ></div>
                                        </div>
                                    </div>
                                    <!-- -----------------------------out of the tabs ---------------------------->
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                </div>
                <!-- We are using Google Visulization Table Chart to generate the table. Here we are generating the Table to show the Status Logs by using Google Visulization API. -->
                <apex:outputPanel id="chartPanel">
                    <script type="text/javascript">
                    
                    google.load("visualization", "1", {packages:["table"]});
                    
                    function drawTable() {
                        
                        document.getElementById("StatusLogSpinner").style.display = "" ;
                        
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.BreadwinnerController.getTableChartData}', 
                            function(result, event){
                                if (event.status) {
                                    if(result.length > 0){
                                        var dataAsArray = new Array();
                                        var columnArray = ["Log Id", "Event Type", "Event Detail", "Additional Detail", "Time"];
                                        dataAsArray.push(columnArray);
                                        
                                        for (var i=0; i<result.length; i++) {
                                            var obj =result[i];
                                            var rowArray = [obj.log_id, obj.event_type, obj.event_detail, decodeHtml(obj.additional_detail), obj.timestamp];
                                            dataAsArray.push(rowArray );
                                        }
                                        
                                        var data = google.visualization.arrayToDataTable(dataAsArray);
                                        
                                        var table = new google.visualization.Table(document.getElementById('table_div'));
                                        
                                        table.draw(data, {showRowNumber: false});
                                        humanTranslation();
                                    }
                                    else{
                                        document.getElementById("message").innerHTML = "Congratulations! There are no error logs.";
                                        document.getElementById("table_div").style.display = "none" ;                        
                                    }
                                    document.getElementById("StatusLogSpinner").style.display = "none" ;
                                }
                            }
                        );
                    }
                    // This method will decode if any special characters found in the Log
                    function decodeHtml(html) {
                        var txt = document.createElement("textarea");
                        txt.innerHTML = html;
                        var decodedURIComp = decodeURIComponent(txt.value);
                        var repalceAmpersend=decodedURIComp.replace(/&amp;/g, '&');
                        var repalceQuotes=repalceAmpersend.replace(/&quot/g, '"');
                        var repalceNewLines=repalceQuotes.replace(/&nl/g, ' ');
                        return repalceNewLines;
                    }

                    //This method will convert our Log to the Human readable, if we found any Validation error like "REQUIRED_FIELD_MISSING"
                    function humanTranslation(){
                        
                        j$( "table.google-visualization-table-table td.google-visualization-table-td:nth-child(4):contains(REQUIRED_FIELD_MISSING)" ).each(function( index ) {
                            
                            var geteachTD=j$( this );
                            
                            var windowparentlocation=String(window.location);
                            var getindex=windowparentlocation.search("sfdcIFrameOrigin=");
                            var resultedAccountFieldsURL='';
                            if(parseInt(getindex)>-1){
                                resultedAccountFieldsURL='/lightning/setup/object/Account/FieldsAndRelationships/view';
                            }
                            else{
                                resultedAccountFieldsURL='/p/setup/layout/LayoutFieldList?type=Account&setupid=AccountFields';
                            }
                            // check oppty or account
                            // get record id
                            // create link and modify text with Human trasalation text
                            // append
                            var gettdtext=geteachTD.text();
                            if(gettdtext.match(/001/g)){
                                var AccountCount = gettdtext.match(/001/g).length;
                                console.log("---------Account Count--------"+gettdtext.match(/001/g).length);
                                var textPart1 = "<b>Human Translation:</b> One or more of your fields are required on the Account. But, on this <b>";
                                var i;
                                for(i =1; i<=AccountCount;i++){
                                    textPart1 += ' ';
                                    var recordId=gettdtext.substring(gettdtext.search("001"),gettdtext.search("001")+18);
                                    var opptyORAccountLink = "<a href=\'{!$Site.BaseUrl}/"+recordId+"\' target='_blank'>Account</a>";
                                    if(AccountCount > 1)
                                        opptyORAccountLink = "<a href=\'{!$Site.BaseUrl}/"+recordId+"\' target='_blank'>Account"+i+"</a>";
                                    textPart1 += opptyORAccountLink;
                                    gettdtext = gettdtext.replace(recordId, "Account"+i);
                                }
                                var AcctErr = geteachTD.text().split("id 001");
                                console.log('------AcctErr[1]--------'+AcctErr);
                                console.log('------AcctErr[1]--------'+AcctErr[1]);
                                var fields = AcctErr[1].match(/\[.*?\]/);
                                console.log("------------fields--------------"+fields)
                                var textPart = textPart1+'</b> those fields are blank. Please populate <b>'+fields+'</b>. Other Accounts may have the same problem, but this was the Account that caused the error.';  
                                geteachTD.append('<div><p><i>'+textPart+'</i></p></div>');
                            }
                            if(gettdtext.match(/006/g)){
                                var OptyCount = gettdtext.match(/006/g).length;
                                var translatedText = "<b>Human Translation:</b> One or more of your fields are required on the Opportunity. But, on this<b>"; 
                                if(geteachTD.text().match(/001/g))
                                    translatedText = 'One or more of your fields are required on the Opportunity. But, on this<b>';                            
                                var i;
                                for(i =1; i<=OptyCount;i++){
                                    translatedText +=' ';
                                    var recordId=gettdtext.substring(gettdtext.search("006"),gettdtext.search("006")+18);
                                    var opptyORAccountLink = "<a href=\'{!$Site.BaseUrl}/"+recordId+"\' target='_blank'>Opportunity</a>";
                                    if(OptyCount > 1)
                                        opptyORAccountLink = "<a href=\'{!$Site.BaseUrl}/"+recordId+"\' target='_blank'>Opportunity"+i+"</a>";
                                    translatedText += opptyORAccountLink;
                                    gettdtext = gettdtext.replace(recordId, "Opportunity"+i);
                                }
                                var OptyErr = geteachTD.text().split("id 006");
                                var fields=OptyErr[1].match(/\[.*?\]/);
                                var OptytranslatedText = translatedText+'</b> those fields are blank. Please populate <b>'+fields+'</b>. Other Opportunities may have the same problem, but this was the Account that caused the error.';  
                                geteachTD.append('<div><p><i>'+OptytranslatedText+'</i></p></div>');
                            }
                            if(gettdtext.match(/Exceptions while inserting Accounts:/g) || gettdtext.match(/Exceptions within last hour of sync:/g)){
                                var AccountFieldsURL = "<a href=\'{!$Site.BaseUrl}"+resultedAccountFieldsURL+"\' target='_blank'>Account Fields</a>";
                                var AcctErr = geteachTD.text();
                                var fields = AcctErr.match(/\[.*?\]/);
                                var AccountInsertText = '<b>Human Translation:</b> One or more of your fields are required on the Account, please remove the validations on fields <b>'+fields+'</b> by visiting <b>'+AccountFieldsURL+'</b> here.';  
                                geteachTD.append('<div><p><i>'+AccountInsertText+'</i></p></div>');
                            }
                        });
                        
                    }
                    </script>
                </apex:outputPanel>
            </body>
        </html>
    </apex:form>
</apex:page>